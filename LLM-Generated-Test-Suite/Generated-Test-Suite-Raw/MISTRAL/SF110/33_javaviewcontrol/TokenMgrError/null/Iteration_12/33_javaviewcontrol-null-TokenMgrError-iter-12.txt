```java
package com.pmdesigns.jvc.tools;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class TokenMgrErrorTest {

    private TokenMgrError tokenMgrError;

    @Before
    public void setUp() {
        tokenMgrError = new TokenMgrError();
    }

    @Test
    public void testAddEscapes() {
        assertEquals("\\b\\t\\n\\f\\r\\\"\\'\\\\", TokenMgrError.addEscapes("\b\t\n\f\r\"\'\\"));
        assertEquals("\\u0000", TokenMgrError.addEscapes("\0"));
        assertEquals("A", TokenMgrError.addEscapes("A"));
        assertEquals("\\u0080", TokenMgrError.addEscapes("\u0080"));
    }

    @Test
    public void testLexicalError() {
        String expected = "Lexical error at line 1, column 1.  Encountered: \"\\t\" (9), after : \"\"";
        assertEquals(expected, TokenMgrError.LexicalError(false, 0, 1, 1, "", '\t'));

        expected = "Lexical error at line 1, column 1.  Encountered: <EOF> , after : \"\"";
        assertEquals(expected, TokenMgrError.LexicalError(true, 0, 1, 1, "", '\0'));
    }

    @Test
    public void testGetMessage() {
        tokenMgrError = new TokenMgrError("Test Message", 0);
        assertEquals("Test Message", tokenMgrError.getMessage());
    }

    @Test
    public void testConstructorWithMessageAndReason() {
        tokenMgrError = new TokenMgrError("Test Message", 1);
        assertEquals("Test Message", tokenMgrError.getMessage());
        assertEquals(1, tokenMgrError.errorCode);
    }

    @Test
    public void testConstructorWithLexicalError() {
        tokenMgrError = new TokenMgrError(false, 0, 1, 1, "", '\t', 2);
        String expectedMessage = "Lexical error at line 1, column 1.  Encountered: \"\\t\" (9), after : \"\"";
        assertEquals(expectedMessage, tokenMgrError.getMessage());
        assertEquals(2, tokenMgrError.errorCode);
    }

    @Test
    public void testDefaultConstructor() {
        tokenMgrError = new TokenMgrError();
        assertNull(tokenMgrError.getMessage());
        assertEquals(0, tokenMgrError.errorCode);
    }
}
```