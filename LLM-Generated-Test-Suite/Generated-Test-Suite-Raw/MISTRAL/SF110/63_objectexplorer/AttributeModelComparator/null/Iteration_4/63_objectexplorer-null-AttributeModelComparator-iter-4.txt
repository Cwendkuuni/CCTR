```java
package de.paragon.explorer.model;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class AttributeModelComparatorTest {

    private AttributeModelComparator comparator;
    private AttributeModel modelA;
    private AttributeModel modelB;
    private AttributeModel modelC;
    private AttributeModel modelD;

    @Before
    public void setUp() {
        comparator = new AttributeModelComparator();
        modelA = new AttributeModel("a");
        modelB = new AttributeModel("b");
        modelC = new AttributeModel("c");
        modelD = new AttributeModel("d");
    }

    @Test
    public void testCompare_EqualNames() {
        assertEquals(0, comparator.compare(modelA, modelA));
        assertEquals(0, comparator.compare(modelB, modelB));
    }

    @Test
    public void testCompare_DifferentNames() {
        assertTrue(comparator.compare(modelA, modelB) < 0);
        assertTrue(comparator.compare(modelB, modelA) > 0);
        assertTrue(comparator.compare(modelB, modelC) < 0);
        assertTrue(comparator.compare(modelC, modelB) > 0);
    }

    @Test
    public void testCompare_SpecialCaseA() {
        assertTrue(comparator.compare(modelA, modelB) < 0);
        assertTrue(comparator.compare(modelB, modelA) > 0);
        assertTrue(comparator.compare(modelA, modelC) < 0);
        assertTrue(comparator.compare(modelC, modelA) > 0);
    }

    @Test
    public void testCompare_NullValues() {
        assertTrue(comparator.compare(null, modelA) == -1);
        assertTrue(comparator.compare(modelA, null) == -1);
        assertTrue(comparator.compare(null, null) == -1);
    }

    @Test
    public void testCompare_CaseInsensitive() {
        AttributeModel modelAUpper = new AttributeModel("A");
        assertEquals(0, comparator.compare(modelA, modelAUpper));
        assertEquals(0, comparator.compare(modelAUpper, modelA));
    }

    @Test
    public void testCompare_SpecialCaseA_CaseInsensitive() {
        AttributeModel modelAUpper = new AttributeModel("A");
        assertTrue(comparator.compare(modelAUpper, modelB) < 0);
        assertTrue(comparator.compare(modelB, modelAUpper) > 0);
        assertTrue(comparator.compare(modelAUpper, modelC) < 0);
        assertTrue(comparator.compare(modelC, modelAUpper) > 0);
    }

    // Helper class to simulate AttributeModel for testing purposes
    private class AttributeModel {
        private String name;

        public AttributeModel(String name) {
            this.name = name;
        }

        public String getName() {
            return name;
        }
    }
}
```