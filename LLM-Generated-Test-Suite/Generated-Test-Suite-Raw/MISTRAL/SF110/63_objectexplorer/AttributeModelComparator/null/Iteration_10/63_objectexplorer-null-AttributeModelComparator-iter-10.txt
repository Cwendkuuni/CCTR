Certainly! Below is a complete JUnit 4 test suite to comprehensively test the `AttributeModelComparator` class.

```java
package de.paragon.explorer.model;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class AttributeModelComparatorTest {

    private AttributeModelComparator comparator;
    private AttributeModel model1;
    private AttributeModel model2;

    @Before
    public void setUp() {
        comparator = new AttributeModelComparator();
        model1 = new AttributeModel("model1");
        model2 = new AttributeModel("model2");
    }

    @Test
    public void testCompare_NullObjects() {
        assertEquals(-1, comparator.compare(null, model2));
        assertEquals(-1, comparator.compare(model1, null));
        assertEquals(-1, comparator.compare(null, null));
    }

    @Test
    public void testCompare_EqualNames() {
        model1.setName("test");
        model2.setName("test");
        assertEquals(0, comparator.compare(model1, model2));
    }

    @Test
    public void testCompare_DifferentNames() {
        model1.setName("apple");
        model2.setName("banana");
        assertTrue(comparator.compare(model1, model2) < 0);

        model1.setName("banana");
        model2.setName("apple");
        assertTrue(comparator.compare(model1, model2) > 0);
    }

    @Test
    public void testCompare_SpecialCaseA() {
        model1.setName("a");
        model2.setName("b");
        assertTrue(comparator.compare(model1, model2) < 0);

        model1.setName("b");
        model2.setName("a");
        assertTrue(comparator.compare(model1, model2) > 0);

        model1.setName("a");
        model2.setName("a");
        assertEquals(0, comparator.compare(model1, model2));
    }

    @Test
    public void testCompare_NamesBeforeAndAfterA() {
        model1.setName("z");
        model2.setName("a");
        assertTrue(comparator.compare(model1, model2) > 0);

        model1.setName("a");
        model2.setName("z");
        assertTrue(comparator.compare(model1, model2) < 0);

        model1.setName("b");
        model2.setName("a");
        assertTrue(comparator.compare(model1, model2) > 0);

        model1.setName("a");
        model2.setName("b");
        assertTrue(comparator.compare(model1, model2) < 0);
    }

    @Test
    public void testCompare_NamesWithDifferentCases() {
        model1.setName("A");
        model2.setName("a");
        assertEquals(0, comparator.compare(model1, model2));

        model1.setName("a");
        model2.setName("A");
        assertEquals(0, comparator.compare(model1, model2));
    }

    // Helper class to simulate AttributeModel
    private class AttributeModel {
        private String name;

        public AttributeModel(String name) {
            this.name = name;
        }

        public String getName() {
            return name;
        }

        public void setName(String name) {
            this.name = name;
        }
    }
}
```

This test suite includes tests for:
- Comparing null objects.
- Comparing objects with equal names.
- Comparing objects with different names.
- Special cases where names are "a" or compared to "a".
- Comparing names that are before and after "a".
- Comparing names with different cases.

The `AttributeModel` class is simulated within the test suite for the sake of completeness.