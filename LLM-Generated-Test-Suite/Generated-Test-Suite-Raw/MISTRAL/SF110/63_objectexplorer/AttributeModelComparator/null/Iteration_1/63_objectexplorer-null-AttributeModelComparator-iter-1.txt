Certainly! Below is a comprehensive JUnit 4 test suite for the `AttributeModelComparator` class. This test suite includes tests for various scenarios, including null values, equal names, and names that are before and after the letter "a".

```java
package de.paragon.explorer.model;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class AttributeModelComparatorTest {

    private AttributeModelComparator comparator;
    private AttributeModel modelA;
    private AttributeModel modelB;
    private AttributeModel modelC;
    private AttributeModel modelD;

    @Before
    public void setUp() {
        comparator = new AttributeModelComparator();
        modelA = new AttributeModel("a");
        modelB = new AttributeModel("b");
        modelC = new AttributeModel("c");
        modelD = new AttributeModel("A");
    }

    @Test
    public void testCompare_NullValues() {
        assertEquals(-1, comparator.compare(null, modelA));
        assertEquals(1, comparator.compare(modelA, null));
        assertEquals(-1, comparator.compare(null, null));
    }

    @Test
    public void testCompare_EqualNames() {
        assertEquals(0, comparator.compare(modelA, modelA));
        assertEquals(0, comparator.compare(modelB, modelB));
    }

    @Test
    public void testCompare_NamesBeforeA() {
        AttributeModel modelBeforeA = new AttributeModel("Aa");
        assertEquals(-1, comparator.compare(modelBeforeA, modelA));
        assertEquals(1, comparator.compare(modelA, modelBeforeA));
    }

    @Test
    public void testCompare_NamesAfterA() {
        assertEquals(-1, comparator.compare(modelA, modelB));
        assertEquals(1, comparator.compare(modelB, modelA));
    }

    @Test
    public void testCompare_NamesAroundA() {
        assertEquals(1, comparator.compare(modelD, modelA));
        assertEquals(-1, comparator.compare(modelA, modelD));
    }

    @Test
    public void testCompare_MixedCase() {
        assertEquals(0, comparator.compare(modelA, modelD));
        assertEquals(0, comparator.compare(modelD, modelA));
    }

    @Test
    public void testCompare_DifferentNames() {
        assertEquals(-1, comparator.compare(modelB, modelC));
        assertEquals(1, comparator.compare(modelC, modelB));
    }

    // Helper class to simulate AttributeModel
    private class AttributeModel {
        private String name;

        public AttributeModel(String name) {
            this.name = name;
        }

        public String getName() {
            return name;
        }
    }
}
```

This test suite covers various scenarios, including:
- Comparing null values.
- Comparing models with equal names.
- Comparing names that are before and after the letter "a".
- Comparing mixed-case names.
- Comparing different names.

Each test method uses assertions to verify the expected behavior of the `compare` method in the `AttributeModelComparator` class.