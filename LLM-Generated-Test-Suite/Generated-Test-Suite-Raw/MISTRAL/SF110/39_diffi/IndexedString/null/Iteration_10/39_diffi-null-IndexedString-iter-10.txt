```java
package de.beiri22.stringincrementor.helper;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class IndexedStringTest {

    private IndexedString indexedString;

    @Before
    public void setUp() {
        indexedString = new IndexedString("abracadabra");
    }

    @Test
    public void testConstructor() {
        IndexedString testString = new IndexedString("test");
        assertNotNull(testString);
        assertEquals(4, testString.values.length);
        assertEquals('t', testString.values[0]);
        assertEquals('e', testString.values[1]);
        assertEquals('s', testString.values[2]);
        assertEquals('t', testString.values[3]);
    }

    @Test
    public void testIndexOf_Found() {
        char[] target = "abra".toCharArray();
        int result = indexedString.indexOf(target);
        assertEquals(0, result);
    }

    @Test
    public void testIndexOf_NotFound() {
        char[] target = "xyz".toCharArray();
        int result = indexedString.indexOf(target);
        assertEquals(-1, result);
    }

    @Test
    public void testIndexOf_EmptyTarget() {
        char[] target = "".toCharArray();
        int result = indexedString.indexOf(target);
        assertEquals(-1, result);
    }

    @Test
    public void testIndexOf_SingleCharacter() {
        char[] target = "a".toCharArray();
        int result = indexedString.indexOf(target);
        assertEquals(0, result);
    }

    @Test
    public void testIndexOf_MultipleOccurrences() {
        char[] target = "a".toCharArray();
        int result = indexedString.indexOf(target);
        assertTrue(result == 0 || result == 3 || result == 5 || result == 7 || result == 10);
    }

    @Test
    public void testIndexOf_LongTarget() {
        char[] target = "abracadabra".toCharArray();
        int result = indexedString.indexOf(target);
        assertEquals(0, result);
    }

    @Test
    public void testIndexOf_TargetLongerThanString() {
        char[] target = "abracadabraabracadabra".toCharArray();
        int result = indexedString.indexOf(target);
        assertEquals(-1, result);
    }

    @Test
    public void testIndexOf_TargetAtEnd() {
        char[] target = "bra".toCharArray();
        int result = indexedString.indexOf(target);
        assertEquals(7, result);
    }

    @Test
    public void testIndexOf_TargetAtStart() {
        char[] target = "abra".toCharArray();
        int result = indexedString.indexOf(target);
        assertEquals(0, result);
    }

    @Test
    public void testIndexOf_TargetInMiddle() {
        char[] target = "cad".toCharArray();
        int result = indexedString.indexOf(target);
        assertEquals(4, result);
    }
}
```