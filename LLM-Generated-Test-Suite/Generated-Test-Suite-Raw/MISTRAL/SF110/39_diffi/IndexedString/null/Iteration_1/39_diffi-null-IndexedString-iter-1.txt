```java
package de.beiri22.stringincrementor.helper;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class IndexedStringTest {

    private IndexedString indexedString;

    @Before
    public void setUp() {
        indexedString = new IndexedString("example string");
    }

    @Test
    public void testConstructor() {
        IndexedString testString = new IndexedString("test");
        assertNotNull(testString);
        assertEquals(4, testString.values.length);
        assertEquals('t', testString.values[0]);
        assertEquals('e', testString.values[1]);
        assertEquals('s', testString.values[2]);
        assertEquals('t', testString.values[3]);
    }

    @Test
    public void testIndexOf_Found() {
        int result = indexedString.indexOf("string".toCharArray());
        assertEquals(8, result);
    }

    @Test
    public void testIndexOf_NotFound() {
        int result = indexedString.indexOf("nonexistent".toCharArray());
        assertEquals(-1, result);
    }

    @Test
    public void testIndexOf_EmptyTarget() {
        int result = indexedString.indexOf(new char[0]);
        assertEquals(0, result);
    }

    @Test
    public void testIndexOf_SingleCharacter() {
        int result = indexedString.indexOf("e".toCharArray());
        assertEquals(1, result);
    }

    @Test
    public void testIndexOf_MultipleOccurrences() {
        IndexedString multiOccurrenceString = new IndexedString("ababab");
        int result = multiOccurrenceString.indexOf("ab".toCharArray());
        assertEquals(0, result);
    }

    @Test
    public void testIndexOf_TargetLongerThanSource() {
        int result = indexedString.indexOf("this is a very long string that should not be found".toCharArray());
        assertEquals(-1, result);
    }

    @Test
    public void testIndexOf_TargetAtEnd() {
        int result = indexedString.indexOf("ring".toCharArray());
        assertEquals(11, result);
    }

    @Test
    public void testIndexOf_TargetAtStart() {
        int result = indexedString.indexOf("exam".toCharArray());
        assertEquals(0, result);
    }

    @Test
    public void testIndexOf_TargetInMiddle() {
        int result = indexedString.indexOf("ample".toCharArray());
        assertEquals(1, result);
    }

    @Test
    public void testIndexOf_SpecialCharacters() {
        IndexedString specialCharString = new IndexedString("!@#$%^&*()");
        int result = specialCharString.indexOf("@#$".toCharArray());
        assertEquals(1, result);
    }

    @Test
    public void testIndexOf_CaseSensitivity() {
        int result = indexedString.indexOf("String".toCharArray());
        assertEquals(-1, result);
    }
}
```