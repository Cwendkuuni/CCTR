Certainly! Below is a comprehensive JUnit 4 test suite for the `IndexedString` class. This test suite includes tests for the constructor and the `indexOf` method.

```java
package de.beiri22.stringincrementor.helper;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class IndexedStringTest {

    private IndexedString indexedString;

    @Before
    public void setUp() {
        indexedString = new IndexedString("abracadabra");
    }

    @Test
    public void testConstructor() {
        IndexedString testString = new IndexedString("test");
        assertNotNull(testString);
        assertEquals(4, testString.values.length);
        assertEquals('t', testString.values[0]);
        assertEquals('e', testString.values[1]);
        assertEquals('s', testString.values[2]);
        assertEquals('t', testString.values[3]);
    }

    @Test
    public void testIndexOf_Found() {
        char[] target = "abra".toCharArray();
        int result = indexedString.indexOf(target);
        assertEquals(0, result);
    }

    @Test
    public void testIndexOf_NotFound() {
        char[] target = "xyz".toCharArray();
        int result = indexedString.indexOf(target);
        assertEquals(-1, result);
    }

    @Test
    public void testIndexOf_MultipleOccurrences() {
        char[] target = "abra".toCharArray();
        int result = indexedString.indexOf(target);
        assertEquals(0, result);

        char[] target2 = "bra".toCharArray();
        int result2 = indexedString.indexOf(target2);
        assertEquals(1, result2);
    }

    @Test
    public void testIndexOf_EmptyTarget() {
        char[] target = "".toCharArray();
        int result = indexedString.indexOf(target);
        assertEquals(-1, result);
    }

    @Test
    public void testIndexOf_SingleCharacter() {
        char[] target = "a".toCharArray();
        int result = indexedString.indexOf(target);
        assertEquals(0, result);
    }

    @Test
    public void testIndexOf_LongerThanSource() {
        char[] target = "abracadabraabracadabra".toCharArray();
        int result = indexedString.indexOf(target);
        assertEquals(-1, result);
    }

    @Test
    public void testIndexOf_PartialMatch() {
        char[] target = "abracad".toCharArray();
        int result = indexedString.indexOf(target);
        assertEquals(0, result);
    }

    @Test
    public void testIndexOf_EdgeCase() {
        char[] target = "abracadabra".toCharArray();
        int result = indexedString.indexOf(target);
        assertEquals(0, result);
    }
}
```

This test suite covers various scenarios, including:
- Testing the constructor to ensure the `values` array is correctly initialized.
- Testing the `indexOf` method for different cases such as finding a substring, not finding a substring, handling multiple occurrences, empty target, single character target, target longer than the source string, partial matches, and edge cases.

You can run this test suite using any JUnit 4 compatible test runner to verify the correctness of the `IndexedString` class.