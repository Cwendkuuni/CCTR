```java
package de.beiri22.stringincrementor.helper;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class IndexedStringTest {

    private IndexedString indexedString;

    @Before
    public void setUp() {
        indexedString = new IndexedString("example string");
    }

    @Test
    public void testConstructor() {
        assertEquals("example string", new String(indexedString.values));
    }

    @Test
    public void testCount() {
        IndexedString testString = new IndexedString("aaabbbccc");
        assertEquals(3, testString.count('a'));
        assertEquals(3, testString.count('b'));
        assertEquals(3, testString.count('c'));
        assertEquals(0, testString.count('d'));
    }

    @Test
    public void testIndexOf_Found() {
        assertEquals(0, indexedString.indexOf("example".toCharArray()));
        assertEquals(8, indexedString.indexOf("string".toCharArray()));
    }

    @Test
    public void testIndexOf_NotFound() {
        assertEquals(-1, indexedString.indexOf("notfound".toCharArray()));
    }

    @Test
    public void testIndexOf_EmptyTarget() {
        assertEquals(-1, indexedString.indexOf(new char[0]));
    }

    @Test
    public void testIndexOf_TargetLongerThanString() {
        assertEquals(-1, indexedString.indexOf("this is a very long string that should not be found".toCharArray()));
    }

    @Test
    public void testIndexOf_SingleCharacter() {
        assertEquals(1, indexedString.indexOf("x".toCharArray()));
        assertEquals(8, indexedString.indexOf("s".toCharArray()));
    }

    @Test
    public void testIndexOf_MultipleOccurrences() {
        IndexedString testString = new IndexedString("ababab");
        assertEquals(0, testString.indexOf("ab".toCharArray()));
        assertEquals(2, testString.indexOf("ba".toCharArray()));
    }

    @Test
    public void testIndexOf_EdgeCases() {
        IndexedString testString = new IndexedString("a");
        assertEquals(0, testString.indexOf("a".toCharArray()));
        assertEquals(-1, testString.indexOf("b".toCharArray()));
    }
}
```