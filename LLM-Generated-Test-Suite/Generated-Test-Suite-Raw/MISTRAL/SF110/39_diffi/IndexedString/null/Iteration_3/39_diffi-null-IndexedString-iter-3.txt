```java
package de.beiri22.stringincrementor.helper;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class IndexedStringTest {

    private IndexedString indexedString;

    @Before
    public void setUp() {
        indexedString = new IndexedString("example string");
    }

    @Test
    public void testConstructor() {
        IndexedString testString = new IndexedString("test");
        assertEquals("test".length(), testString.values.length);
        for (int i = 0; i < "test".length(); i++) {
            assertEquals("test".charAt(i), testString.values[i]);
        }
    }

    @Test
    public void testCount() {
        IndexedString testString = new IndexedString("aaabbbccc");
        assertEquals(3, testString.count('a'));
        assertEquals(3, testString.count('b'));
        assertEquals(3, testString.count('c'));
        assertEquals(0, testString.count('d'));
    }

    @Test
    public void testIndexOf_Found() {
        assertEquals(0, indexedString.indexOf("example".toCharArray()));
        assertEquals(8, indexedString.indexOf("string".toCharArray()));
    }

    @Test
    public void testIndexOf_NotFound() {
        assertEquals(-1, indexedString.indexOf("notfound".toCharArray()));
    }

    @Test
    public void testIndexOf_EmptyTarget() {
        assertEquals(-1, indexedString.indexOf(new char[0]));
    }

    @Test
    public void testIndexOf_SingleCharTarget() {
        assertEquals(0, indexedString.indexOf("e".toCharArray()));
        assertEquals(8, indexedString.indexOf("s".toCharArray()));
        assertEquals(-1, indexedString.indexOf("z".toCharArray()));
    }

    @Test
    public void testIndexOf_TargetLongerThanSource() {
        assertEquals(-1, indexedString.indexOf("thisisareallylongstringthatshouldnotbefound".toCharArray()));
    }

    @Test
    public void testIndexOf_TargetAtEnd() {
        assertEquals(8, indexedString.indexOf("string".toCharArray()));
    }

    @Test
    public void testIndexOf_TargetAtStart() {
        assertEquals(0, indexedString.indexOf("example".toCharArray()));
    }

    @Test
    public void testIndexOf_TargetInMiddle() {
        IndexedString testString = new IndexedString("abcdefghijklmnopqrstuvwxyz");
        assertEquals(2, testString.indexOf("cde".toCharArray()));
    }
}
```