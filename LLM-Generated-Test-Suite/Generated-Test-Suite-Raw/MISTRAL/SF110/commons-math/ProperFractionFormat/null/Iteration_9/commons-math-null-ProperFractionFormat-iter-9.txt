```java
package org.apache.commons.math3.fraction;

import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;
import java.text.NumberFormat;
import java.text.ParsePosition;
import org.apache.commons.math3.exception.NullArgumentException;

public class ProperFractionFormatTest {

    private ProperFractionFormat properFractionFormat;
    private NumberFormat numberFormat;

    @Before
    public void setUp() {
        numberFormat = NumberFormat.getInstance();
        properFractionFormat = new ProperFractionFormat(numberFormat);
    }

    @Test
    public void testDefaultConstructor() {
        ProperFractionFormat defaultFormat = new ProperFractionFormat();
        assertNotNull(defaultFormat);
    }

    @Test
    public void testConstructorWithNumberFormat() {
        ProperFractionFormat format = new ProperFractionFormat(numberFormat);
        assertNotNull(format);
    }

    @Test
    public void testConstructorWithAllFormats() {
        NumberFormat numeratorFormat = NumberFormat.getInstance();
        NumberFormat denominatorFormat = NumberFormat.getInstance();
        ProperFractionFormat format = new ProperFractionFormat(numberFormat, numeratorFormat, denominatorFormat);
        assertNotNull(format);
    }

    @Test
    public void testFormat() {
        Fraction fraction = new Fraction(5, 3);
        StringBuffer buffer = new StringBuffer();
        FieldPosition pos = new FieldPosition(0);
        properFractionFormat.format(fraction, buffer, pos);
        assertEquals("1 2 / 3", buffer.toString());
    }

    @Test
    public void testGetWholeFormat() {
        NumberFormat wholeFormat = properFractionFormat.getWholeFormat();
        assertNotNull(wholeFormat);
    }

    @Test
    public void testParse() {
        String source = "1 2 / 3";
        ParsePosition pos = new ParsePosition(0);
        Fraction fraction = properFractionFormat.parse(source, pos);
        assertNotNull(fraction);
        assertEquals(5, fraction.getNumerator());
        assertEquals(3, fraction.getDenominator());
    }

    @Test
    public void testParseInvalidFormat() {
        String source = "invalid format";
        ParsePosition pos = new ParsePosition(0);
        Fraction fraction = properFractionFormat.parse(source, pos);
        assertNull(fraction);
    }

    @Test
    public void testSetWholeFormat() {
        NumberFormat newFormat = NumberFormat.getInstance();
        properFractionFormat.setWholeFormat(newFormat);
        assertEquals(newFormat, properFractionFormat.getWholeFormat());
    }

    @Test(expected = NullArgumentException.class)
    public void testSetWholeFormatNull() {
        properFractionFormat.setWholeFormat(null);
    }
}
```