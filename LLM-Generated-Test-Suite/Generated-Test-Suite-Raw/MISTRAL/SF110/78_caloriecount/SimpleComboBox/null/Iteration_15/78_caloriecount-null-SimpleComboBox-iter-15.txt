Certainly! Below is a comprehensive JUnit 4 test suite for the `SimpleComboBox` class. This test suite covers all the methods in the `SimpleComboBox` class.

```java
package com.lts.swing.combobox;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

import javax.swing.ComboBoxModel;

public class SimpleComboBoxTest {

    private SimpleComboBox simpleComboBox;
    private SimpleComboBoxModel simpleComboBoxModel;

    @Before
    public void setUp() {
        simpleComboBoxModel = new SimpleComboBoxModel();
        simpleComboBox = new SimpleComboBox(simpleComboBoxModel);
    }

    @Test
    public void testConstructor() {
        assertNotNull(simpleComboBox);
        assertEquals(simpleComboBoxModel, simpleComboBox.getModel());
    }

    @Test
    public void testSetModel() {
        SimpleComboBoxModel newModel = new SimpleComboBoxModel();
        simpleComboBox.setModel(newModel);
        assertEquals(newModel, simpleComboBox.getModel());
    }

    @Test
    public void testSetModelWithInvalidModel() {
        ComboBoxModel invalidModel = new DefaultComboBoxModel();
        simpleComboBox.setModel(invalidModel);
        assertNotEquals(invalidModel, simpleComboBox.getModel());
    }

    @Test
    public void testGetSelectedValue() {
        simpleComboBoxModel.setSelectedValue(123);
        assertEquals(123, simpleComboBox.getSelectedValue());
    }

    @Test
    public void testGetSelectedValueWithNullModel() {
        simpleComboBox.setModel(null);
        assertNull(simpleComboBox.getSelectedValue());
    }

    @Test
    public void testSetSelectedValue() {
        simpleComboBox.setSelectedValue(456);
        assertEquals(456, simpleComboBoxModel.getSelectedValue());
    }

    @Test
    public void testGetSelectedInt() {
        simpleComboBoxModel.setSelectedValue(789);
        assertEquals(789, simpleComboBox.getSelectedInt());
    }

    @Test
    public void testGetSelectedIntWithLong() {
        simpleComboBoxModel.setSelectedValue(123456789L);
        assertEquals(123456789, simpleComboBox.getSelectedInt());
    }

    @Test
    public void testGetSelectedIntWithShort() {
        simpleComboBoxModel.setSelectedValue((short) 123);
        assertEquals(123, simpleComboBox.getSelectedInt());
    }

    @Test
    public void testGetSelectedIntWithByte() {
        simpleComboBoxModel.setSelectedValue((byte) 45);
        assertEquals(45, simpleComboBox.getSelectedInt());
    }

    @Test(expected = IllegalArgumentException.class)
    public void testGetSelectedIntWithInvalidType() {
        simpleComboBoxModel.setSelectedValue("invalid");
        simpleComboBox.getSelectedInt();
    }

    @Test
    public void testGetSelectedIntWithNullValue() {
        simpleComboBoxModel.setSelectedValue(null);
        assertEquals(-1, simpleComboBox.getSelectedInt());
    }

    @Test
    public void testGetSelectedLong() {
        simpleComboBoxModel.setSelectedValue(789);
        assertEquals(789L, simpleComboBox.getSelectedLong());
    }

    @Test
    public void testGetSelectedLongWithLong() {
        simpleComboBoxModel.setSelectedValue(123456789L);
        assertEquals(123456789L, simpleComboBox.getSelectedLong());
    }

    @Test
    public void testGetSelectedLongWithShort() {
        simpleComboBoxModel.setSelectedValue((short) 123);
        assertEquals(123L, simpleComboBox.getSelectedLong());
    }

    @Test
    public void testGetSelectedLongWithByte() {
        simpleComboBoxModel.setSelectedValue((byte) 45);
        assertEquals(45L, simpleComboBox.getSelectedLong());
    }

    @Test(expected = IllegalArgumentException.class)
    public void testGetSelectedLongWithInvalidType() {
        simpleComboBoxModel.setSelectedValue("invalid");
        simpleComboBox.getSelectedLong();
    }

    @Test
    public void testGetSelectedLongWithNullValue() {
        simpleComboBoxModel.setSelectedValue(null);
        assertEquals(-1L, simpleComboBox.getSelectedLong());
    }
}
```

This test suite includes tests for the constructor, `setModel`, `getSelectedValue`, `setSelectedValue`, `getSelectedInt`, and `getSelectedLong` methods. It covers various scenarios, including valid and invalid inputs, to ensure comprehensive testing of the `SimpleComboBox` class.