```java
package org.scribe.model;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class OAuthConfigTest {

    private OAuthConfig oAuthConfig;
    private OAuthConfig oAuthConfigWithCallback;
    private OAuthConfig oAuthConfigWithScope;

    @Before
    public void setUp() {
        oAuthConfig = new OAuthConfig("apiKey", "apiSecret");
        oAuthConfigWithCallback = new OAuthConfig("apiKey", "apiSecret", "callback", SignatureType.QueryString, null);
        oAuthConfigWithScope = new OAuthConfig("apiKey", "apiSecret", "callback", SignatureType.QueryString, "scope");
    }

    @Test
    public void testConstructorWithKeyAndSecret() {
        assertEquals("apiKey", oAuthConfig.getApiKey());
        assertEquals("apiSecret", oAuthConfig.getApiSecret());
        assertEquals("oob", oAuthConfig.getCallback());
        assertEquals(SignatureType.Header, oAuthConfig.getSignatureType());
        assertNull(oAuthConfig.getScope());
        assertFalse(oAuthConfig.hasScope());
    }

    @Test
    public void testConstructorWithAllParameters() {
        assertEquals("apiKey", oAuthConfigWithCallback.getApiKey());
        assertEquals("apiSecret", oAuthConfigWithCallback.getApiSecret());
        assertEquals("callback", oAuthConfigWithCallback.getCallback());
        assertEquals(SignatureType.QueryString, oAuthConfigWithCallback.getSignatureType());
        assertNull(oAuthConfigWithCallback.getScope());
        assertFalse(oAuthConfigWithCallback.hasScope());
    }

    @Test
    public void testConstructorWithScope() {
        assertEquals("apiKey", oAuthConfigWithScope.getApiKey());
        assertEquals("apiSecret", oAuthConfigWithScope.getApiSecret());
        assertEquals("callback", oAuthConfigWithScope.getCallback());
        assertEquals(SignatureType.QueryString, oAuthConfigWithScope.getSignatureType());
        assertEquals("scope", oAuthConfigWithScope.getScope());
        assertTrue(oAuthConfigWithScope.hasScope());
    }

    @Test
    public void testGetApiKey() {
        assertEquals("apiKey", oAuthConfig.getApiKey());
    }

    @Test
    public void testGetApiSecret() {
        assertEquals("apiSecret", oAuthConfig.getApiSecret());
    }

    @Test
    public void testGetCallback() {
        assertEquals("oob", oAuthConfig.getCallback());
        assertEquals("callback", oAuthConfigWithCallback.getCallback());
    }

    @Test
    public void testGetSignatureType() {
        assertEquals(SignatureType.Header, oAuthConfig.getSignatureType());
        assertEquals(SignatureType.QueryString, oAuthConfigWithCallback.getSignatureType());
    }

    @Test
    public void testGetScope() {
        assertNull(oAuthConfig.getScope());
        assertNull(oAuthConfigWithCallback.getScope());
        assertEquals("scope", oAuthConfigWithScope.getScope());
    }

    @Test
    public void testHasScope() {
        assertFalse(oAuthConfig.hasScope());
        assertFalse(oAuthConfigWithCallback.hasScope());
        assertTrue(oAuthConfigWithScope.hasScope());
    }
}
```