```java
package com.google.common.base;

import com.google.common.annotations.GwtCompatible;
import com.google.common.base.Objects.ToStringHelper;
import org.junit.Test;
import static org.junit.Assert.*;

@GwtCompatible
public class ObjectsTest {

    @Test
    public void testEqual() {
        assertTrue(Objects.equal(null, null));
        assertTrue(Objects.equal("test", "test"));
        assertFalse(Objects.equal(null, "test"));
        assertFalse(Objects.equal("test", null));
        assertFalse(Objects.equal("test1", "test2"));
    }

    @Test
    public void testHashCode() {
        assertEquals(Arrays.hashCode(new Object[]{"test"}), Objects.hashCode("test"));
        assertEquals(Arrays.hashCode(new Object[]{null, "test"}), Objects.hashCode(null, "test"));
        assertEquals(Arrays.hashCode(new Object[]{}), Objects.hashCode());
    }

    @Test
    public void testToStringHelperWithObject() {
        ToStringHelper helper = Objects.toStringHelper(new Object());
        assertNotNull(helper);
        assertEquals("Object{}", helper.toString());
    }

    @Test
    public void testToStringHelperWithClass() {
        ToStringHelper helper = Objects.toStringHelper(ObjectsTest.class);
        assertNotNull(helper);
        assertEquals("ObjectsTest{}", helper.toString());
    }

    @Test
    public void testToStringHelperWithString() {
        ToStringHelper helper = Objects.toStringHelper("TestClass");
        assertNotNull(helper);
        assertEquals("TestClass{}", helper.toString());
    }

    @Test
    public void testFirstNonNull() {
        assertEquals("first", Objects.firstNonNull("first", "second"));
        assertEquals("second", Objects.firstNonNull(null, "second"));
        assertNull(Objects.firstNonNull(null, null));
    }

    @Test
    public void testToStringHelperOmitNullValues() {
        ToStringHelper helper = Objects.toStringHelper("TestClass").omitNullValues();
        helper.add("name", null);
        helper.add("value", "test");
        assertEquals("TestClass{value=test}", helper.toString());
    }

    @Test
    public void testToStringHelperAdd() {
        ToStringHelper helper = Objects.toStringHelper("TestClass");
        helper.add("name", "test");
        helper.add("age", 30);
        assertEquals("TestClass{name=test, age=30}", helper.toString());
    }

    @Test
    public void testToStringHelperAddValue() {
        ToStringHelper helper = Objects.toStringHelper("TestClass");
        helper.addValue("test");
        helper.addValue(30);
        assertEquals("TestClass{test, 30}", helper.toString());
    }

    @Test
    public void testToStringHelperAddPrimitiveValues() {
        ToStringHelper helper = Objects.toStringHelper("TestClass");
        helper.add("bool", true);
        helper.add("char", 'a');
        helper.add("double", 1.1);
        helper.add("float", 2.2f);
        helper.add("int", 3);
        helper.add("long", 4L);
        assertEquals("TestClass{bool=true, char=a, double=1.1, float=2.2, int=3, long=4}", helper.toString());
    }

    @Test
    public void testToStringHelperAddValuePrimitiveValues() {
        ToStringHelper helper = Objects.toStringHelper("TestClass");
        helper.addValue(true);
        helper.addValue('a');
        helper.addValue(1.1);
        helper.addValue(2.2f);
        helper.addValue(3);
        helper.addValue(4L);
        assertEquals("TestClass{true, a, 1.1, 2.2, 3, 4}", helper.toString());
    }
}
```