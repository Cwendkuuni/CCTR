```java
package com.jstevh.viewer;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

import javax.swing.*;
import java.lang.reflect.*;
import java.util.*;
import com.jstevh.tools.*;

public class ClassInfoTest {

    private ClassInfo classInfo;
    private DirManager mockDirManager;

    @Before
    public void setUp() throws Exception {
        ClassInfo.debug = false;
        mockDirManager = new DirManager() {
            @Override
            public String[] getPackageList() {
                return new String[]{"com.example"};
            }
        };
    }

    @Test
    public void testIsAbstract() throws ClassNotFoundException {
        classInfo = new ClassInfo("java.util.AbstractList");
        assertTrue(classInfo.isAbstract());

        classInfo = new ClassInfo("java.util.ArrayList");
        assertFalse(classInfo.isAbstract());
    }

    @Test
    public void testIsInterface() throws ClassNotFoundException {
        classInfo = new ClassInfo("java.util.List");
        assertTrue(classInfo.isInterface());

        classInfo = new ClassInfo("java.util.ArrayList");
        assertFalse(classInfo.isInterface());
    }

    @Test
    public void testGetClassName() throws ClassNotFoundException {
        classInfo = new ClassInfo("java.util.ArrayList");
        assertEquals("java.util.ArrayList", classInfo.getClassName());
    }

    @Test
    public void testGetClassPackage() throws ClassNotFoundException {
        classInfo = new ClassInfo("java.util.ArrayList");
        assertEquals("java.util", classInfo.getClassPackage());
    }

    @Test
    public void testGetSuperClassName() throws ClassNotFoundException {
        classInfo = new ClassInfo("java.util.ArrayList");
        assertEquals("java.util.AbstractList", classInfo.getSuperClassName());

        classInfo = new ClassInfo("java.lang.Object");
        assertNull(classInfo.getSuperClassName());
    }

    @Test
    public void testPrintFields() throws ClassNotFoundException {
        classInfo = new ClassInfo("java.util.ArrayList");
        String[] fields = classInfo.printFields();
        assertNotNull(fields);
        assertTrue(fields.length > 0);
    }

    @Test
    public void testPrintMethods() throws ClassNotFoundException {
        classInfo = new ClassInfo("java.util.ArrayList");
        String[] methods = classInfo.printMethods();
        assertNotNull(methods);
        assertTrue(methods.length > 0);
    }

    @Test
    public void testPrintMethodsWithParam() throws ClassNotFoundException {
        classInfo = new ClassInfo("java.util.ArrayList");
        String[] methods = classInfo.printMethods(ClassInfo.NO_OBJECT_METHODS);
        assertNotNull(methods);
        assertTrue(methods.length > 0);
    }

    @Test
    public void testPrintConstructors() throws ClassNotFoundException {
        classInfo = new ClassInfo("java.util.ArrayList");
        String[] constructors = classInfo.printConstructors();
        assertNotNull(constructors);
        assertTrue(constructors.length > 0);
    }

    @Test
    public void testPrintInterfaces() throws ClassNotFoundException {
        classInfo = new ClassInfo("java.util.ArrayList");
        String[] interfaces = classInfo.printInterfaces();
        assertNotNull(interfaces);
        assertTrue(interfaces.length > 0);
    }

    @Test
    public void testSrchMethods() throws ClassNotFoundException {
        classInfo = new ClassInfo("java.util.ArrayList");
        String[] methods = classInfo.srchMethods("add");
        assertNotNull(methods);
        assertTrue(methods.length > 0);
    }

    @Test
    public void testSrchMethodsWithIndex() throws ClassNotFoundException {
        classInfo = new ClassInfo("java.util.ArrayList");
        String[] methods = classInfo.srchMethods("add", new String[]{"public"});
        assertNotNull(methods);
        assertTrue(methods.length > 0);
    }

    @Test
    public void testGetFoundMethod() throws ClassNotFoundException {
        classInfo = new ClassInfo("java.util.ArrayList");
        String[] methods = classInfo.srchMethods("add");
        assertNotNull(methods);
        assertTrue(methods.length > 0);

        MethodData methodData = classInfo.getFoundMethod(0);
        assertNotNull(methodData);
        assertEquals("java.util.ArrayList", methodData.getMethClass());
    }

    @Test
    public void testClassInfoWithDirManager() throws ClassNotFoundException {
        classInfo = new ClassInfo("java.util.ArrayList", mockDirManager);
        assertNotNull(classInfo);
        assertEquals("java.util.ArrayList", classInfo.getClassName());
    }

    @Test(expected = ClassNotFoundException.class)
    public void testClassInfoWithInvalidClassName() throws ClassNotFoundException {
        classInfo = new ClassInfo("InvalidClassName");
    }

    @Test
    public void testMainMethod() throws Exception {
        String[] args = {"java.util.ArrayList"};
        ClassInfo.main(args);
        // This test is mainly to ensure that the main method runs without exceptions
    }
}
```