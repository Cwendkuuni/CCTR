```java
package net.virtualinfinity.atrobots.gui.renderers;

import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;
import java.awt.Graphics2D;
import java.awt.geom.Ellipse2D;
import java.util.HashSet;
import java.util.Set;
import net.virtualinfinity.atrobots.snapshots.RobotSnapshot;

public class RobotRendererTest {

    private RobotRenderer robotRenderer;
    private RobotSnapshot robotSnapshot;
    private Graphics2D g2d;
    private Set<Integer> selectedRobotIds;

    @Before
    public void setUp() {
        robotRenderer = new RobotRenderer();
        robotSnapshot = new RobotSnapshot(); // Assuming a default constructor exists
        g2d = new MockGraphics2D(); // Use a mock implementation of Graphics2D
        selectedRobotIds = new HashSet<>();
    }

    @Test
    public void testRenderDeadRobot() {
        robotSnapshot.setDead(true);
        robotRenderer.setRenderDead(false);
        robotRenderer.render(g2d, robotSnapshot, selectedRobotIds);
        // Verify that no painting methods were called
        assertTrue(((MockGraphics2D) g2d).isEmpty());
    }

    @Test
    public void testRenderAliveRobot() {
        robotSnapshot.setDead(false);
        robotRenderer.render(g2d, robotSnapshot, selectedRobotIds);
        // Verify that painting methods were called
        assertFalse(((MockGraphics2D) g2d).isEmpty());
    }

    @Test
    public void testRenderSelectedRobot() {
        selectedRobotIds.add(robotSnapshot.getId());
        robotRenderer.render(g2d, robotSnapshot, selectedRobotIds);
        // Verify that paintSelection was called
        assertTrue(((MockGraphics2D) g2d).isSelectionPainted());
    }

    @Test
    public void testIsRenderDead() {
        assertTrue(robotRenderer.isRenderDead());
        robotRenderer.setRenderDead(false);
        assertFalse(robotRenderer.isRenderDead());
    }

    @Test
    public void testIsShowStatusBars() {
        assertTrue(robotRenderer.isShowStatusBars());
        robotRenderer.setShowStatusBars(false);
        assertFalse(robotRenderer.isShowStatusBars());
    }

    @Test
    public void testIsShowName() {
        assertTrue(robotRenderer.isShowName());
        robotRenderer.setShowName(false);
        assertFalse(robotRenderer.isShowName());
    }

    @Test
    public void testIsFillShield() {
        assertTrue(robotRenderer.isFillShield());
        robotRenderer.setFillShield(false);
        assertFalse(robotRenderer.isFillShield());
    }

    // Mock implementation of Graphics2D for testing purposes
    private static class MockGraphics2D extends Graphics2D {
        private boolean isEmpty = true;
        private boolean isSelectionPainted = false;

        @Override
        public void draw(Shape s) {
            isEmpty = false;
        }

        @Override
        public void fill(Shape s) {
            isEmpty = false;
        }

        @Override
        public void drawString(String str, float x, float y) {
            isEmpty = false;
        }

        @Override
        public void setPaint(Paint paint) {
            isEmpty = false;
        }

        @Override
        public void setStroke(Stroke s) {
            isEmpty = false;
        }

        public boolean isEmpty() {
            return isEmpty;
        }

        public boolean isSelectionPainted() {
            return isSelectionPainted;
        }

        // Other methods can be overridden as needed for testing
    }
}
```