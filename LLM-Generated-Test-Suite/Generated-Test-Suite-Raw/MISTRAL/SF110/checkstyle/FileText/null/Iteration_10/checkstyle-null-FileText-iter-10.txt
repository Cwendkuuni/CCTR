```java
package com.puppycrawl.tools.checkstyle.api;

import org.junit.Before;
import org.junit.Test;
import org.junit.Assert;

import java.io.File;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.Arrays;
import java.util.List;

public class FileTextTest {

    private FileText fileText;
    private File testFile;
    private static final String TEST_FILE_CONTENT = "line1\nline2\r\nline3\n";

    @Before
    public void setUp() throws IOException {
        testFile = File.createTempFile("testFileText", ".txt");
        testFile.deleteOnExit();
        Files.write(TEST_FILE_CONTENT.getBytes(Charset.forName("UTF-8")), testFile);
        fileText = new FileText(testFile, "UTF-8");
    }

    @Test
    public void testConstructorWithFileAndCharset() throws IOException {
        FileText fileText = new FileText(testFile, "UTF-8");
        Assert.assertEquals(testFile, fileText.getFile());
        Assert.assertEquals(Charset.forName("UTF-8"), fileText.getCharset());
        Assert.assertEquals(TEST_FILE_CONTENT, fileText.getFullText().toString());
    }

    @Test
    public void testConstructorWithFileText() {
        FileText copyFileText = new FileText(fileText);
        Assert.assertEquals(fileText.getFile(), copyFileText.getFile());
        Assert.assertEquals(fileText.getCharset(), copyFileText.getCharset());
        Assert.assertEquals(fileText.getFullText(), copyFileText.getFullText());
        Assert.assertArrayEquals(fileText.toLinesArray(), copyFileText.toLinesArray());
    }

    @Test
    public void testFromLines() {
        List<String> lines = Arrays.asList("line1", "line2", "line3");
        FileText fileTextFromLines = FileText.fromLines(testFile, lines);
        Assert.assertEquals(testFile, fileTextFromLines.getFile());
        Assert.assertArrayEquals(lines.toArray(new String[0]), fileTextFromLines.toLinesArray());
    }

    @Test
    public void testGetFile() {
        Assert.assertEquals(testFile, fileText.getFile());
    }

    @Test
    public void testGetCharset() {
        Assert.assertEquals(Charset.forName("UTF-8"), fileText.getCharset());
    }

    @Test
    public void testGetFullText() {
        Assert.assertEquals(TEST_FILE_CONTENT, fileText.getFullText().toString());
    }

    @Test
    public void testToLinesArray() {
        String[] expectedLines = {"line1", "line2", "line3"};
        Assert.assertArrayEquals(expectedLines, fileText.toLinesArray());
    }

    @Test
    public void testLineColumn() {
        LineColumn lineColumn = fileText.lineColumn(6);
        Assert.assertEquals(1, lineColumn.getLine());
        Assert.assertEquals(1, lineColumn.getColumn());

        lineColumn = fileText.lineColumn(12);
        Assert.assertEquals(2, lineColumn.getLine());
        Assert.assertEquals(1, lineColumn.getColumn());

        lineColumn = fileText.lineColumn(20);
        Assert.assertEquals(3, lineColumn.getLine());
        Assert.assertEquals(1, lineColumn.getColumn());
    }

    @Test
    public void testGet() {
        Assert.assertEquals("line1", fileText.get(0));
        Assert.assertEquals("line2", fileText.get(1));
        Assert.assertEquals("line3", fileText.get(2));
    }

    @Test
    public void testSize() {
        Assert.assertEquals(3, fileText.size());
    }
}
```