Certainly! Below is a comprehensive JUnit 4 test suite for the `Base64` class. This test suite includes tests for all public methods and some edge cases.

```java
package com.hf.sfm.crypt;

import org.junit.Test;
import static org.junit.Assert.*;

public class Base64Test {

    @Test
    public void testAltBase64ToByteArray() {
        String encoded = "!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";
        byte[] decoded = Base64.altBase64ToByteArray(encoded);
        assertNotNull(decoded);
        assertEquals(64, decoded.length);
    }

    @Test(expected = IllegalArgumentException.class)
    public void testAltBase64ToByteArrayInvalidLength() {
        String invalidLength = "!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~!";
        Base64.altBase64ToByteArray(invalidLength);
    }

    @Test(expected = IllegalArgumentException.class)
    public void testAltBase64ToByteArrayInvalidCharacter() {
        String invalidCharacter = "!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~`";
        Base64.altBase64ToByteArray(invalidCharacter);
    }

    @Test
    public void testBase64ToByteArray() {
        String encoded = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
        byte[] decoded = Base64.base64ToByteArray(encoded);
        assertNotNull(decoded);
        assertEquals(64, decoded.length);
    }

    @Test(expected = IllegalArgumentException.class)
    public void testBase64ToByteArrayInvalidLength() {
        String invalidLength = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/A";
        Base64.base64ToByteArray(invalidLength);
    }

    @Test(expected = IllegalArgumentException.class)
    public void testBase64ToByteArrayInvalidCharacter() {
        String invalidCharacter = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/`";
        Base64.base64ToByteArray(invalidCharacter);
    }

    @Test
    public void testByteArrayToAltBase64() {
        byte[] data = new byte[64];
        for (int i = 0; i < 64; i++) {
            data[i] = (byte) i;
        }
        String encoded = Base64.byteArrayToAltBase64(data);
        assertNotNull(encoded);
        assertEquals(88, encoded.length());
    }

    @Test
    public void testByteArrayToBase64() {
        byte[] data = new byte[64];
        for (int i = 0; i < 64; i++) {
            data[i] = (byte) i;
        }
        String encoded = Base64.byteArrayToBase64(data);
        assertNotNull(encoded);
        assertEquals(88, encoded.length());
    }

    @Test
    public void testMain() {
        Base64.main(new String[]{});
        // This test is just to ensure that the main method runs without exceptions
    }
}
```

This test suite covers the following:
- Testing the `altBase64ToByteArray` method with valid input.
- Testing the `altBase64ToByteArray` method with invalid input (invalid length and invalid character).
- Testing the `base64ToByteArray` method with valid input.
- Testing the `base64ToByteArray` method with invalid input (invalid length and invalid character).
- Testing the `byteArrayToAltBase64` method with valid input.
- Testing the `byteArrayToBase64` method with valid input.
- Testing the `main` method to ensure it runs without exceptions.

You can run these tests using a JUnit test runner to verify the correctness of the `Base64` class.