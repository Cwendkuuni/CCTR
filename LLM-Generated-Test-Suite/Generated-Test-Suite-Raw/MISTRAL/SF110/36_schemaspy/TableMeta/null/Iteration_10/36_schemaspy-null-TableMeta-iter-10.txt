```java
package net.sourceforge.schemaspy.model.xml;

import org.junit.Before;
import org.junit.Test;
import org.w3c.dom.*;
import org.xml.sax.SAXException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import java.io.IOException;
import java.util.List;

import static org.junit.Assert.*;

public class TableMetaTest {

    private DocumentBuilder documentBuilder;

    @Before
    public void setUp() throws ParserConfigurationException {
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        documentBuilder = factory.newDocumentBuilder();
    }

    @Test
    public void testTableMetaConstructor() throws SAXException, IOException {
        String xml = "<table name=\"testTable\" comments=\"test comments\" remoteSchema=\"testSchema\" remoteCatalog=\"testCatalog\">" +
                     "<column name=\"testColumn\"/>" +
                     "</table>";
        Document doc = documentBuilder.parse(new java.io.ByteArrayInputStream(xml.getBytes()));
        Node tableNode = doc.getFirstChild();

        TableMeta tableMeta = new TableMeta(tableNode);

        assertEquals("testTable", tableMeta.getName());
        assertEquals("test comments", tableMeta.getComments());
        assertEquals("testSchema", tableMeta.getRemoteSchema());
        assertEquals("testCatalog", tableMeta.getRemoteCatalog());
        assertNotNull(tableMeta.getColumns());
        assertEquals(1, tableMeta.getColumns().size());
    }

    @Test
    public void testTableMetaConstructorWithRemarks() throws SAXException, IOException {
        String xml = "<table name=\"testTable\" remarks=\"test remarks\" remoteSchema=\"testSchema\" remoteCatalog=\"testCatalog\">" +
                     "<column name=\"testColumn\"/>" +
                     "</table>";
        Document doc = documentBuilder.parse(new java.io.ByteArrayInputStream(xml.getBytes()));
        Node tableNode = doc.getFirstChild();

        TableMeta tableMeta = new TableMeta(tableNode);

        assertEquals("testTable", tableMeta.getName());
        assertEquals("test remarks", tableMeta.getComments());
        assertEquals("testSchema", tableMeta.getRemoteSchema());
        assertEquals("testCatalog", tableMeta.getRemoteCatalog());
        assertNotNull(tableMeta.getColumns());
        assertEquals(1, tableMeta.getColumns().size());
    }

    @Test
    public void testTableMetaConstructorWithNoComments() throws SAXException, IOException {
        String xml = "<table name=\"testTable\" remoteSchema=\"testSchema\" remoteCatalog=\"testCatalog\">" +
                     "<column name=\"testColumn\"/>" +
                     "</table>";
        Document doc = documentBuilder.parse(new java.io.ByteArrayInputStream(xml.getBytes()));
        Node tableNode = doc.getFirstChild();

        TableMeta tableMeta = new TableMeta(tableNode);

        assertEquals("testTable", tableMeta.getName());
        assertNull(tableMeta.getComments());
        assertEquals("testSchema", tableMeta.getRemoteSchema());
        assertEquals("testCatalog", tableMeta.getRemoteCatalog());
        assertNotNull(tableMeta.getColumns());
        assertEquals(1, tableMeta.getColumns().size());
    }

    @Test
    public void testTableMetaConstructorWithEmptyComments() throws SAXException, IOException {
        String xml = "<table name=\"testTable\" comments=\"\" remoteSchema=\"testSchema\" remoteCatalog=\"testCatalog\">" +
                     "<column name=\"testColumn\"/>" +
                     "</table>";
        Document doc = documentBuilder.parse(new java.io.ByteArrayInputStream(xml.getBytes()));
        Node tableNode = doc.getFirstChild();

        TableMeta tableMeta = new TableMeta(tableNode);

        assertEquals("testTable", tableMeta.getName());
        assertNull(tableMeta.getComments());
        assertEquals("testSchema", tableMeta.getRemoteSchema());
        assertEquals("testCatalog", tableMeta.getRemoteCatalog());
        assertNotNull(tableMeta.getColumns());
        assertEquals(1, tableMeta.getColumns().size());
    }

    @Test
    public void testTableMetaConstructorWithNoRemoteSchema() throws SAXException, IOException {
        String xml = "<table name=\"testTable\" comments=\"test comments\" remoteCatalog=\"testCatalog\">" +
                     "<column name=\"testColumn\"/>" +
                     "</table>";
        Document doc = documentBuilder.parse(new java.io.ByteArrayInputStream(xml.getBytes()));
        Node tableNode = doc.getFirstChild();

        TableMeta tableMeta = new TableMeta(tableNode);

        assertEquals("testTable", tableMeta.getName());
        assertEquals("test comments", tableMeta.getComments());
        assertNull(tableMeta.getRemoteSchema());
        assertEquals("testCatalog", tableMeta.getRemoteCatalog());
        assertNotNull(tableMeta.getColumns());
        assertEquals(1, tableMeta.getColumns().size());
    }

    @Test
    public void testTableMetaConstructorWithNoRemoteCatalog() throws SAXException, IOException {
        String xml = "<table name=\"testTable\" comments=\"test comments\" remoteSchema=\"testSchema\">" +
                     "<column name=\"testColumn\"/>" +
                     "</table>";
        Document doc = documentBuilder.parse(new java.io.ByteArrayInputStream(xml.getBytes()));
        Node tableNode = doc.getFirstChild();

        TableMeta tableMeta = new TableMeta(tableNode);

        assertEquals("testTable", tableMeta.getName());
        assertEquals("test comments", tableMeta.getComments());
        assertEquals("testSchema", tableMeta.getRemoteSchema());
        assertNull(tableMeta.getRemoteCatalog());
        assertNotNull(tableMeta.getColumns());
        assertEquals(1, tableMeta.getColumns().size());
    }

    @Test
    public void testTableMetaConstructorWithMultipleColumns() throws SAXException, IOException {
        String xml = "<table name=\"testTable\" comments=\"test comments\" remoteSchema=\"testSchema\" remoteCatalog=\"testCatalog\">" +
                     "<column name=\"testColumn1\"/>" +
                     "<column name=\"testColumn2\"/>" +
                     "</table>";
        Document doc = documentBuilder.parse(new java.io.ByteArrayInputStream(xml.getBytes()));
        Node tableNode = doc.getFirstChild();

        TableMeta tableMeta = new TableMeta(tableNode);

        assertEquals("testTable", tableMeta.getName());
        assertEquals("test comments", tableMeta.getComments());
        assertEquals("testSchema", tableMeta.getRemoteSchema());
        assertEquals("testCatalog", tableMeta.getRemoteCatalog());
        assertNotNull(tableMeta.getColumns());
        assertEquals(2, tableMeta.getColumns().size());
    }
}
```