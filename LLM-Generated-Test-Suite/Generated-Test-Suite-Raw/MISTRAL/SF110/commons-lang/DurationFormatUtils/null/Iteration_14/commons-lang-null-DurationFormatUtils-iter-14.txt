```java
package org.apache.commons.lang3.time;

import org.junit.Test;
import static org.junit.Assert.*;

public class DurationFormatUtilsTest {

    @Test
    public void testFormatDurationHMS() {
        assertEquals("0:00:00.000", DurationFormatUtils.formatDurationHMS(0));
        assertEquals("0:00:01.000", DurationFormatUtils.formatDurationHMS(1000));
        assertEquals("0:01:00.000", DurationFormatUtils.formatDurationHMS(60000));
        assertEquals("1:00:00.000", DurationFormatUtils.formatDurationHMS(3600000));
    }

    @Test
    public void testFormatDurationISO() {
        assertEquals("P0D", DurationFormatUtils.formatDurationISO(0));
        assertEquals("PT1S", DurationFormatUtils.formatDurationISO(1000));
        assertEquals("PT1M", DurationFormatUtils.formatDurationISO(60000));
        assertEquals("PT1H", DurationFormatUtils.formatDurationISO(3600000));
    }

    @Test
    public void testFormatDuration() {
        assertEquals("0:00:00.000", DurationFormatUtils.formatDuration(0, "H:mm:ss.SSS"));
        assertEquals("0:00:01.000", DurationFormatUtils.formatDuration(1000, "H:mm:ss.SSS"));
        assertEquals("0:01:00.000", DurationFormatUtils.formatDuration(60000, "H:mm:ss.SSS"));
        assertEquals("1:00:00.000", DurationFormatUtils.formatDuration(3600000, "H:mm:ss.SSS"));
    }

    @Test
    public void testFormatDurationWithPadding() {
        assertEquals("00:00:00.000", DurationFormatUtils.formatDuration(0, "HH:mm:ss.SSS", true));
        assertEquals("00:00:01.000", DurationFormatUtils.formatDuration(1000, "HH:mm:ss.SSS", true));
        assertEquals("00:01:00.000", DurationFormatUtils.formatDuration(60000, "HH:mm:ss.SSS", true));
        assertEquals("01:00:00.000", DurationFormatUtils.formatDuration(3600000, "HH:mm:ss.SSS", true));
    }

    @Test
    public void testFormatDurationWords() {
        assertEquals("0 days 0 hours 0 minutes 0 seconds", DurationFormatUtils.formatDurationWords(0, false, false));
        assertEquals("0 days 0 hours 0 minutes 1 second", DurationFormatUtils.formatDurationWords(1000, false, false));
        assertEquals("0 days 0 hours 1 minute 0 seconds", DurationFormatUtils.formatDurationWords(60000, false, false));
        assertEquals("0 days 1 hour 0 minutes 0 seconds", DurationFormatUtils.formatDurationWords(3600000, false, false));
    }

    @Test
    public void testFormatPeriodISO() {
        assertEquals("P0D", DurationFormatUtils.formatPeriodISO(0, 0));
        assertEquals("PT1S", DurationFormatUtils.formatPeriodISO(0, 1000));
        assertEquals("PT1M", DurationFormatUtils.formatPeriodISO(0, 60000));
        assertEquals("PT1H", DurationFormatUtils.formatPeriodISO(0, 3600000));
    }

    @Test
    public void testFormatPeriod() {
        assertEquals("P0D", DurationFormatUtils.formatPeriod(0, 0, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", false, TimeZone.getDefault()));
        assertEquals("PT1S", DurationFormatUtils.formatPeriod(0, 1000, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", false, TimeZone.getDefault()));
        assertEquals("PT1M", DurationFormatUtils.formatPeriod(0, 60000, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", false, TimeZone.getDefault()));
        assertEquals("PT1H", DurationFormatUtils.formatPeriod(0, 3600000, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", false, TimeZone.getDefault()));
    }

    @Test
    public void testFormatPeriodWithPadding() {
        assertEquals("P0D", DurationFormatUtils.formatPeriod(0, 0, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true, TimeZone.getDefault()));
        assertEquals("PT1S", DurationFormatUtils.formatPeriod(0, 1000, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true, TimeZone.getDefault()));
        assertEquals("PT1M", DurationFormatUtils.formatPeriod(0, 60000, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true, TimeZone.getDefault()));
        assertEquals("PT1H", DurationFormatUtils.formatPeriod(0, 3600000, "'P'yyyy'Y'M'M'd'DT'H'H'm'M's.S'S'", true, TimeZone.getDefault()));
    }
}
```