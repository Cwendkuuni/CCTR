```java
package osa.ora.server.admin.ui;

import osa.ora.server.admin.*;
import osa.ora.server.beans.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.util.*;
import org.junit.*;
import static org.junit.Assert.*;
import org.mockito.*;

public class UpdateUserPanelTest {

    private AdminApp adminApp;
    private ControlPanel controlPanel;
    private UpdateUserPanel updateUserPanel;

    @Before
    public void setUp() {
        adminApp = Mockito.mock(AdminApp.class);
        controlPanel = Mockito.mock(ControlPanel.class);
        updateUserPanel = new UpdateUserPanel(adminApp, controlPanel);
    }

    @Test
    public void testUpdateModel() {
        List<Group> groups = new ArrayList<>();
        Group group = new Group();
        group.setUsers(new Vector<>());
        groups.add(group);

        Mockito.when(adminApp.getGroups()).thenReturn(groups);

        updateUserPanel.updateModel();

        Mockito.verify(adminApp, Mockito.times(1)).getGroups();
        assertEquals(new DefaultComboBoxModel<>(groups), updateUserPanel.jComboBox1.getModel());
    }

    @Test
    public void testInitComponents() {
        updateUserPanel.initComponents();

        assertNotNull(updateUserPanel.jLabel1);
        assertNotNull(updateUserPanel.jLabel2);
        assertNotNull(updateUserPanel.jLabel3);
        assertNotNull(updateUserPanel.jCheckBox1);
        assertNotNull(updateUserPanel.jCheckBox2);
        assertNotNull(updateUserPanel.jCheckBox3);
        assertNotNull(updateUserPanel.jLabel4);
        assertNotNull(updateUserPanel.jComboBox1);
        assertNotNull(updateUserPanel.jTextField2);
        assertNotNull(updateUserPanel.jTextField3);
        assertNotNull(updateUserPanel.jButton1);
        assertNotNull(updateUserPanel.jButton2);
        assertNotNull(updateUserPanel.jComboBox2);
        assertNotNull(updateUserPanel.jButton3);
        assertNotNull(updateUserPanel.jButton4);
        assertNotNull(updateUserPanel.jLabel5);
        assertNotNull(updateUserPanel.jTextField1);
        assertNotNull(updateUserPanel.jTextField4);
        assertNotNull(updateUserPanel.jLabel6);
    }

    @Test
    public void testJButton1ActionPerformed() {
        updateUserPanel.jButton1ActionPerformed(null);

        Mockito.verify(controlPanel, Mockito.times(1)).getParentDialog();
        Mockito.verify(controlPanel.getParentDialog(), Mockito.times(1)).setVisible(false);
    }

    @Test
    public void testJButton2ActionPerformed() {
        User user = new User();
        Group group = new Group();
        group.setUsers(new Vector<>(Collections.singletonList(user)));

        Mockito.when(adminApp.delUser(user)).thenReturn(user);
        Mockito.when(adminApp.getGroups()).thenReturn(Collections.singletonList(group));

        updateUserPanel.jComboBox1.setSelectedItem(group);
        updateUserPanel.jComboBox2.setSelectedItem(user);

        updateUserPanel.jButton2ActionPerformed(null);

        Mockito.verify(adminApp, Mockito.times(1)).delUser(user);
        Mockito.verify(adminApp, Mockito.times(1)).getErrorIcon();
    }

    @Test
    public void testJButton3ActionPerformed() {
        User user = new User();

        Mockito.when(adminApp.resetUserPass(user)).thenReturn(user);

        updateUserPanel.jComboBox2.setSelectedItem(user);

        updateUserPanel.jButton3ActionPerformed(null);

        Mockito.verify(adminApp, Mockito.times(1)).resetUserPass(user);
        Mockito.verify(adminApp, Mockito.times(1)).getErrorIcon();
    }

    @Test
    public void testJButton4ActionPerformed() {
        User user = new User();
        Group group = new Group();
        group.setUsers(new Vector<>(Collections.singletonList(user)));

        Mockito.when(adminApp.updateUser(user)).thenReturn(user);
        Mockito.when(adminApp.getGroups()).thenReturn(Collections.singletonList(group));

        updateUserPanel.jComboBox1.setSelectedItem(group);
        updateUserPanel.jComboBox2.setSelectedItem(user);
        updateUserPanel.jTextField1.setText("Test User");
        updateUserPanel.jTextField2.setText("test@example.com");

        updateUserPanel.jButton4ActionPerformed(null);

        Mockito.verify(adminApp, Mockito.times(1)).updateUser(user);
        Mockito.verify(adminApp, Mockito.times(1)).getErrorIcon();
    }

    @Test
    public void testJComboBox1ItemStateChanged() {
        Group group = new Group();
        User user = new User();
        group.setUsers(new Vector<>(Collections.singletonList(user)));

        updateUserPanel.jComboBox1.setSelectedItem(group);

        updateUserPanel.jComboBox1ItemStateChanged(null);

        assertEquals(new DefaultComboBoxModel<>(group.getUsers()), updateUserPanel.jComboBox2.getModel());
    }

    @Test
    public void testReset() {
        updateUserPanel.reset();

        assertEquals("", updateUserPanel.jTextField1.getText());
        assertEquals("", updateUserPanel.jTextField2.getText());
        assertEquals("", updateUserPanel.jTextField3.getText());
        assertEquals("", updateUserPanel.jTextField4.getText());
        assertFalse(updateUserPanel.jCheckBox1.isSelected());
        assertFalse(updateUserPanel.jCheckBox2.isSelected());
        assertFalse(updateUserPanel.jCheckBox3.isSelected());
    }

    @Test
    public void testFillUser() {
        User user = new User();
        user.setName("Test User");
        user.setEmail("test@example.com");
        user.setDirectPhone("1234567890");
        user.setJobTitle("Developer");
        user.setShowMyStatus(true);
        user.setOnlyStartChat(true);
        user.setCanJoinChatRoom(true);

        updateUserPanel.fillUser(user);

        assertEquals("Test User", updateUserPanel.jTextField1.getText());
        assertEquals("test@example.com", updateUserPanel.jTextField2.getText());
        assertEquals("1234567890", updateUserPanel.jTextField3.getText());
        assertEquals("Developer", updateUserPanel.jTextField4.getText());
        assertTrue(updateUserPanel.jCheckBox1.isSelected());
        assertTrue(updateUserPanel.jCheckBox2.isSelected());
        assertTrue(updateUserPanel.jCheckBox3.isSelected());
    }

    @Test
    public void testJComboBox2ItemStateChanged() {
        User user = new User();

        updateUserPanel.jComboBox2.setSelectedItem(user);

        updateUserPanel.jComboBox2ItemStateChanged(null);

        Mockito.verify(updateUserPanel, Mockito.times(1)).fillUser(user);
    }
}
```