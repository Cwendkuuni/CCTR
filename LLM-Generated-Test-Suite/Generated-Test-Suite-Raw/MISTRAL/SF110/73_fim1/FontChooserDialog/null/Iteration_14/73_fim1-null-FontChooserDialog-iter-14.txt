```java
package osa.ora.server.client.ui.utils;

import org.junit.Before;
import org.junit.Test;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static org.junit.Assert.*;

public class FontChooserDialogTest {

    private FontChooserDialog fontChooserDialog;
    private JFontChooser mockChooserPane;
    private ActionListener okListener;
    private ActionListener cancelListener;

    @Before
    public void setUp() {
        mockChooserPane = new JFontChooser();
        okListener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Mock OK action
            }
        };
        cancelListener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Mock Cancel action
            }
        };
        fontChooserDialog = new FontChooserDialog(new JFrame(), "Test Dialog", true, mockChooserPane, okListener, cancelListener);
    }

    @Test
    public void testConstructor() {
        assertNotNull(fontChooserDialog);
        assertEquals("Test Dialog", fontChooserDialog.getTitle());
        assertTrue(fontChooserDialog.isModal());
        assertEquals(mockChooserPane, fontChooserDialog.chooserPane);
    }

    @Test
    public void testSetVisible() {
        Font initialFont = mockChooserPane.getFont();
        fontChooserDialog.setVisible(true);
        assertEquals(initialFont, fontChooserDialog.initialFont);
        fontChooserDialog.setVisible(false);
        assertFalse(fontChooserDialog.isVisible());
    }

    @Test
    public void testReset() {
        Font initialFont = mockChooserPane.getFont();
        fontChooserDialog.setVisible(true);
        fontChooserDialog.reset();
        assertEquals(initialFont, mockChooserPane.getFont());
    }

    @Test
    public void testCloserWindowClosing() {
        FontChooserDialog.Closer closer = new FontChooserDialog.Closer();
        WindowEvent event = new WindowEvent(fontChooserDialog, WindowEvent.WINDOW_CLOSING);
        closer.windowClosing(event);
        assertFalse(fontChooserDialog.isVisible());
    }

    @Test
    public void testDisposeOnCloseComponentHidden() {
        FontChooserDialog.DisposeOnClose disposeOnClose = new FontChooserDialog.DisposeOnClose();
        ComponentEvent event = new ComponentEvent(fontChooserDialog, ComponentEvent.COMPONENT_HIDDEN);
        disposeOnClose.componentHidden(event);
        assertTrue(fontChooserDialog.isDisplayable());
    }
}
```