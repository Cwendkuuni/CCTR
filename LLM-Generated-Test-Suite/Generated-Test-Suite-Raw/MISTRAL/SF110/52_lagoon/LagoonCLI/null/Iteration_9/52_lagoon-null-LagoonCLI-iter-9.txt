```java
package nu.staldal.lagoon;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Suite;
import org.junit.runners.Suite.SuiteClasses;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintStream;
import java.util.Properties;

import static org.junit.Assert.*;

@RunWith(Suite.class)
@SuiteClasses({
    LagoonCLITest.MainMethodTest.class,
    LagoonCLITest.GetPropertyTest.class,
    LagoonCLITest.ShowTimeTest.class
})
public class LagoonCLITest {

    public static class MainMethodTest {

        private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();
        private final ByteArrayOutputStream errContent = new ByteArrayOutputStream();

        @Before
        public void setUpStreams() {
            System.setOut(new PrintStream(outContent));
            System.setErr(new PrintStream(errContent));
        }

        @Test
        public void testMainNoArgs() {
            LagoonCLI.main(new String[]{});
            assertEquals(LagoonCLI.syntaxMsg + "\n", outContent.toString());
        }

        @Test
        public void testMainBuild() {
            LagoonCLI.main(new String[]{"test.properties", "build"});
            assertTrue(outContent.toString().contains("Building website..."));
        }

        @Test
        public void testMainForce() {
            LagoonCLI.main(new String[]{"test.properties", "force"});
            assertTrue(outContent.toString().contains("Force building website..."));
        }

        @Test
        public void testMainInterval() {
            LagoonCLI.main(new String[]{"test.properties", "10"});
            assertTrue(outContent.toString().contains("Building website..."));
        }

        @Test
        public void testMainInvalidInterval() {
            LagoonCLI.main(new String[]{"test.properties", "invalid"});
            assertEquals(LagoonCLI.syntaxMsg + "\n", outContent.toString());
        }

        @Test
        public void testMainInvalidIntervalNegative() {
            LagoonCLI.main(new String[]{"test.properties", "-10"});
            assertEquals(LagoonCLI.syntaxMsg + "\n", outContent.toString());
        }
    }

    public static class GetPropertyTest {

        private Properties properties;

        @Before
        public void setUp() throws IOException {
            properties = new Properties();
            properties.setProperty("testProperty", "testValue");
            LagoonCLI.properties = properties;
        }

        @Test
        public void testGetProperty() throws Exception {
            assertEquals("testValue", LagoonCLI.getProperty("testProperty"));
        }

        @Test(expected = LagoonException.class)
        public void testGetPropertyNotFound() throws Exception {
            LagoonCLI.getProperty("nonExistentProperty");
        }
    }

    public static class ShowTimeTest {

        private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();

        @Before
        public void setUpStreams() {
            System.setOut(new PrintStream(outContent));
        }

        @Test
        public void testShowTimeMillis() {
            LagoonCLI.showTime(5000);
            assertEquals("in 5000 ms\n", outContent.toString());
        }

        @Test
        public void testShowTimeSeconds() {
            LagoonCLI.showTime(15000);
            assertEquals("in 15 s\n", outContent.toString());
        }
    }
}
```