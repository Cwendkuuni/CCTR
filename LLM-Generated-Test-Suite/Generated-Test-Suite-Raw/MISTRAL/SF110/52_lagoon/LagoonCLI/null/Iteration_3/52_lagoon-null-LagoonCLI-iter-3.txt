```java
package nu.staldal.lagoon;

import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;
import java.io.*;
import java.util.Properties;

public class LagoonCLITest {

    private static final String PROPERTY_FILE = "testProperties.properties";
    private static final String SITEMAP_FILE = "testSitemap.xml";

    @Before
    public void setUp() {
        // Create test property and sitemap files
        try (FileOutputStream fos = new FileOutputStream(PROPERTY_FILE)) {
            Properties properties = new Properties();
            properties.setProperty("targetURL", "http://example.com");
            properties.setProperty("sitemapFile", SITEMAP_FILE);
            properties.setProperty("sourceDir", "src");
            properties.setProperty("password", "testPassword");
            properties.store(fos, null);
        } catch (IOException e) {
            e.printStackTrace();
        }

        try (FileOutputStream fos = new FileOutputStream(SITEMAP_FILE)) {
            fos.write("<sitemap></sitemap>".getBytes());
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @Test
    public void testMainWithPropertyFile() {
        String[] args = {PROPERTY_FILE, "build"};
        LagoonCLI.main(args);
        // Add assertions to verify the expected behavior
    }

    @Test
    public void testMainWithSitemapFile() {
        String[] args = {SITEMAP_FILE, "build"};
        LagoonCLI.main(args);
        // Add assertions to verify the expected behavior
    }

    @Test
    public void testMainWithInterval() {
        String[] args = {PROPERTY_FILE, "10"};
        LagoonCLI.main(args);
        // Add assertions to verify the expected behavior
    }

    @Test
    public void testMainWithForce() {
        String[] args = {PROPERTY_FILE, "force"};
        LagoonCLI.main(args);
        // Add assertions to verify the expected behavior
    }

    @Test
    public void testMainWithInvalidInterval() {
        String[] args = {PROPERTY_FILE, "invalidInterval"};
        LagoonCLI.main(args);
        // Add assertions to verify the expected behavior
    }

    @Test
    public void testMainWithNoArgs() {
        String[] args = {};
        LagoonCLI.main(args);
        // Add assertions to verify the expected behavior
    }

    @Test
    public void testGetProperty() throws Exception {
        Properties properties = new Properties();
        properties.setProperty("testProperty", "testValue");
        LagoonCLI.properties = properties;
        assertEquals("testValue", LagoonCLI.getProperty("testProperty"));
    }

    @Test(expected = LagoonException.class)
    public void testGetPropertyNotFound() throws Exception {
        Properties properties = new Properties();
        LagoonCLI.properties = properties;
        LagoonCLI.getProperty("nonExistentProperty");
    }

    @Test
    public void testShowTime() {
        LagoonCLI.showTime(5000);
        // Add assertions to verify the expected behavior
    }

    @Test
    public void testShowTimeLarge() {
        LagoonCLI.showTime(15000);
        // Add assertions to verify the expected behavior
    }
}
```