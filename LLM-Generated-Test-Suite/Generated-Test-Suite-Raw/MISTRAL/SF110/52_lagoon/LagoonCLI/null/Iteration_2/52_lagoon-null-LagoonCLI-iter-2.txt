```java
package nu.staldal.lagoon;

import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;
import java.io.*;
import java.util.Properties;

public class LagoonCLITest {

    private static final String PROPERTY_FILE = "test-properties.txt";
    private static final String SITEMAP_FILE = "test-sitemap.xml";

    @Before
    public void setUp() {
        // Create test property and sitemap files
        try (PrintWriter out = new PrintWriter(PROPERTY_FILE)) {
            out.println("targetURL=http://example.com");
            out.println("sitemapFile=" + SITEMAP_FILE);
            out.println("sourceDir=.");
            out.println("password=testpassword");
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }

        try (PrintWriter out = new PrintWriter(SITEMAP_FILE)) {
            out.println("<sitemap></sitemap>");
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }

    @Test
    public void testMainWithPropertyFile() {
        String[] args = {PROPERTY_FILE};
        LagoonCLI.main(args);
        // Add assertions to verify the expected behavior
    }

    @Test
    public void testMainWithSitemapFile() {
        String[] args = {SITEMAP_FILE};
        LagoonCLI.main(args);
        // Add assertions to verify the expected behavior
    }

    @Test
    public void testMainWithBuildOption() {
        String[] args = {PROPERTY_FILE, "build"};
        LagoonCLI.main(args);
        // Add assertions to verify the expected behavior
    }

    @Test
    public void testMainWithForceOption() {
        String[] args = {PROPERTY_FILE, "force"};
        LagoonCLI.main(args);
        // Add assertions to verify the expected behavior
    }

    @Test
    public void testMainWithIntervalOption() {
        String[] args = {PROPERTY_FILE, "10"};
        LagoonCLI.main(args);
        // Add assertions to verify the expected behavior
    }

    @Test
    public void testMainWithInvalidInterval() {
        String[] args = {PROPERTY_FILE, "invalid"};
        LagoonCLI.main(args);
        // Add assertions to verify the expected behavior
    }

    @Test
    public void testMainWithNoArguments() {
        String[] args = {};
        LagoonCLI.main(args);
        // Add assertions to verify the expected behavior
    }

    @Test
    public void testGetProperty() throws Exception {
        Properties properties = new Properties();
        properties.setProperty("testProperty", "testValue");
        LagoonCLI.properties = properties;

        String value = LagoonCLI.getProperty("testProperty");
        assertEquals("testValue", value);
    }

    @Test(expected = LagoonException.class)
    public void testGetPropertyNotFound() throws Exception {
        Properties properties = new Properties();
        LagoonCLI.properties = properties;

        LagoonCLI.getProperty("nonExistentProperty");
    }

    @Test
    public void testShowTime() {
        LagoonCLI.showTime(5000L);
        // Add assertions to verify the expected behavior
    }

    @Test
    public void testShowTimeLargeValue() {
        LagoonCLI.showTime(15000L);
        // Add assertions to verify the expected behavior
    }
}
```