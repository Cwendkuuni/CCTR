```java
package nu.staldal.lagoon;

import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;
import java.io.*;
import java.util.Properties;

public class LagoonCLITest {

    private static final String PROPERTY_FILE = "test-properties.txt";
    private static final String SITEMAP_FILE = "test-sitemap.xml";
    private static final String INTERVAL = "10";
    private static final String BUILD = "build";
    private static final String FORCE = "force";

    @Before
    public void setUp() {
        // Create test property and sitemap files
        try (PrintWriter out = new PrintWriter(PROPERTY_FILE)) {
            out.println("targetURL=http://example.com");
            out.println("sitemapFile=test-sitemap.xml");
            out.println("sourceDir=.");
            out.println("password=testpassword");
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }

        try (PrintWriter out = new PrintWriter(SITEMAP_FILE)) {
            out.println("<sitemap></sitemap>");
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }

    @Test
    public void testMainNoArgs() {
        LagoonCLI.main(new String[]{});
        // Expecting the syntax message to be printed
    }

    @Test
    public void testMainPropertyFile() {
        LagoonCLI.main(new String[]{PROPERTY_FILE});
        // Expecting initialization and ready prompt
    }

    @Test
    public void testMainPropertyFileBuild() {
        LagoonCLI.main(new String[]{PROPERTY_FILE, BUILD});
        // Expecting initialization and build process
    }

    @Test
    public void testMainPropertyFileForce() {
        LagoonCLI.main(new String[]{PROPERTY_FILE, FORCE});
        // Expecting initialization and force build process
    }

    @Test
    public void testMainPropertyFileInterval() {
        LagoonCLI.main(new String[]{PROPERTY_FILE, INTERVAL});
        // Expecting initialization and interval build process
    }

    @Test
    public void testMainSitemapFile() {
        LagoonCLI.main(new String[]{SITEMAP_FILE});
        // Expecting initialization and ready prompt
    }

    @Test
    public void testMainSitemapFileBuild() {
        LagoonCLI.main(new String[]{SITEMAP_FILE, BUILD});
        // Expecting initialization and build process
    }

    @Test
    public void testMainSitemapFileForce() {
        LagoonCLI.main(new String[]{SITEMAP_FILE, FORCE});
        // Expecting initialization and force build process
    }

    @Test
    public void testMainSitemapFileInterval() {
        LagoonCLI.main(new String[]{SITEMAP_FILE, INTERVAL});
        // Expecting initialization and interval build process
    }

    @Test
    public void testGetProperty() throws Exception {
        Properties properties = new Properties();
        properties.setProperty("testKey", "testValue");
        LagoonCLI.properties = properties;
        assertEquals("testValue", LagoonCLI.getProperty("testKey"));
    }

    @Test(expected = LagoonException.class)
    public void testGetPropertyNotFound() throws Exception {
        Properties properties = new Properties();
        LagoonCLI.properties = properties;
        LagoonCLI.getProperty("nonExistentKey");
    }

    @Test
    public void testShowTime() {
        // Capture the standard output to verify the printed message
        final ByteArrayOutputStream outContent = new ByteArrayOutputStream();
        System.setOut(new PrintStream(outContent));

        LagoonCLI.showTime(5000);
        assertEquals("in 5 s\n", outContent.toString());

        outContent.reset();
        LagoonCLI.showTime(500);
        assertEquals("in 500 ms\n", outContent.toString());

        // Reset standard output
        System.setOut(System.out);
    }
}
```