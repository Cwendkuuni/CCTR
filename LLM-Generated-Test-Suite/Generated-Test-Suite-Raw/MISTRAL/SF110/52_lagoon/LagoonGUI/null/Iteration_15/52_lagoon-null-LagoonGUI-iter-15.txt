```java
package nu.staldal.lagoon;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;
import java.awt.event.ActionEvent;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;

public class LagoonGUITest {

    private LagoonGUI lagoonGUI;

    @Before
    public void setUp() {
        lagoonGUI = new LagoonGUI();
    }

    @Test
    public void testMain() {
        try {
            LagoonGUI.main(new String[]{});
        } catch (Exception e) {
            fail("Exception thrown: " + e.getMessage());
        }
    }

    @Test
    public void testWindowClosing() {
        lagoonGUI.windowClosing(new WindowEvent(lagoonGUI, WindowEvent.WINDOW_CLOSING));
        // Verify that the application exits
    }

    @Test
    public void testBuild() {
        lagoonGUI.sitemapFile.setValue("testSitemapFile");
        lagoonGUI.sourceDir.setValue("testSourceDir");
        lagoonGUI.targetURL.setValue("testTargetURL");

        lagoonGUI.build(false);
        // Add assertions to verify the build process
    }

    @Test
    public void testExit() {
        lagoonGUI.exit();
        // Verify that the application exits
    }

    @Test
    public void testInit() {
        lagoonGUI.sitemapFile.setValue("testSitemapFile");
        lagoonGUI.sourceDir.setValue("testSourceDir");
        lagoonGUI.targetURL.setValue("testTargetURL");

        lagoonGUI.init();
        // Add assertions to verify the initialization process
    }

    @Test
    public void testLoadPropertyFile() {
        lagoonGUI.loadPropertyFile();
        // Add assertions to verify the property file loading process
    }

    @Test
    public void testLoadProperties() {
        File propertyFile = new File("testProperties.properties");
        try {
            FileOutputStream fos = new FileOutputStream(propertyFile);
            Properties prop = new Properties();
            prop.setProperty("sitemapFile", "testSitemapFile");
            prop.setProperty("sourceDir", "testSourceDir");
            prop.setProperty("targetURL", "testTargetURL");
            prop.store(fos, "Test properties");
            fos.close();

            lagoonGUI.loadProperties(propertyFile);
            assertEquals("testSitemapFile", lagoonGUI.sitemapFile.getValue());
            assertEquals("testSourceDir", lagoonGUI.sourceDir.getValue());
            assertEquals("testTargetURL", lagoonGUI.targetURL.getValue());
        } catch (IOException e) {
            fail("Exception thrown: " + e.getMessage());
        } finally {
            propertyFile.delete();
        }
    }

    @Test
    public void testSavePropertyFile() {
        lagoonGUI.sitemapFile.setValue("testSitemapFile");
        lagoonGUI.sourceDir.setValue("testSourceDir");
        lagoonGUI.targetURL.setValue("testTargetURL");

        lagoonGUI.savePropertyFile();
        // Add assertions to verify the property file saving process
    }

    @Test
    public void testGetProperty() {
        Properties prop = new Properties();
        prop.setProperty("testProperty", "testValue");

        try {
            assertEquals("testValue", LagoonGUI.getProperty(prop, "testProperty"));
        } catch (LagoonException e) {
            fail("Exception thrown: " + e.getMessage());
        }
    }

    @Test
    public void testShowTime() {
        assertEquals("in 5000 ms", LagoonGUI.showTime(5000));
        assertEquals("in 10 s", LagoonGUI.showTime(10000));
    }
}
```