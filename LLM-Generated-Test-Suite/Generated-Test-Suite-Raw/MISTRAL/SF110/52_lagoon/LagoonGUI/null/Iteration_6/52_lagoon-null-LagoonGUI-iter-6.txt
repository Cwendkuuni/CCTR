```java
package nu.staldal.lagoon;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;

public class LagoonGUITest {

    private LagoonGUI lagoonGUI;

    @Before
    public void setUp() {
        lagoonGUI = new LagoonGUI();
    }

    @After
    public void tearDown() {
        lagoonGUI.dispose();
    }

    @Test
    public void testMain() throws Exception {
        String[] args = {};
        LagoonGUI.main(args);
        assertTrue("Main method should not throw an exception", true);
    }

    @Test
    public void testWindowClosing() {
        lagoonGUI.windowClosing(null);
        assertTrue("WindowClosing should call exit method", true);
    }

    @Test
    public void testBuild() {
        lagoonGUI.build(false);
        assertTrue("Build method should not throw an exception", true);
    }

    @Test
    public void testExit() {
        lagoonGUI.exit();
        assertTrue("Exit method should not throw an exception", true);
    }

    @Test
    public void testInit() {
        lagoonGUI.init();
        assertTrue("Init method should not throw an exception", true);
    }

    @Test
    public void testLoadPropertyFile() {
        lagoonGUI.loadPropertyFile();
        assertTrue("LoadPropertyFile method should not throw an exception", true);
    }

    @Test
    public void testLoadProperties() {
        File propertyFile = new File("test.properties");
        try {
            Properties prop = new Properties();
            prop.setProperty("sitemapFile", "sitemap.xml");
            prop.setProperty("sourceDir", "src");
            prop.setProperty("targetURL", "http://example.com");
            prop.setProperty("password", "password");
            FileOutputStream fos = new FileOutputStream(propertyFile);
            prop.store(fos, "Test properties");
            fos.close();

            lagoonGUI.loadProperties(propertyFile);

            assertEquals("sitemapFile", "sitemap.xml", lagoonGUI.sitemapFile.getValue());
            assertEquals("sourceDir", "src", lagoonGUI.sourceDir.getValue());
            assertEquals("targetURL", "http://example.com", lagoonGUI.targetURL.getValue());
            assertEquals("password", "password", lagoonGUI.password);
        } catch (IOException e) {
            fail("LoadProperties method should not throw an exception");
        } finally {
            propertyFile.delete();
        }
    }

    @Test
    public void testSavePropertyFile() {
        lagoonGUI.sitemapFile.setValue("sitemap.xml");
        lagoonGUI.sourceDir.setValue("src");
        lagoonGUI.targetURL.setValue("http://example.com");
        lagoonGUI.password = "password";

        lagoonGUI.savePropertyFile();

        File propertyFile = new File("test.properties");
        try {
            Properties prop = new Properties();
            FileInputStream fis = new FileInputStream(propertyFile);
            prop.load(fis);
            fis.close();

            assertEquals("sitemapFile", "sitemap.xml", prop.getProperty("sitemapFile"));
            assertEquals("sourceDir", "src", prop.getProperty("sourceDir"));
            assertEquals("targetURL", "http://example.com", prop.getProperty("targetURL"));
            assertEquals("password", "password", prop.getProperty("password"));
        } catch (IOException e) {
            fail("SavePropertyFile method should not throw an exception");
        } finally {
            propertyFile.delete();
        }
    }

    @Test
    public void testGetProperty() {
        Properties prop = new Properties();
        prop.setProperty("testProperty", "testValue");

        try {
            String value = LagoonGUI.getProperty(prop, "testProperty");
            assertEquals("testValue", value);
        } catch (LagoonException e) {
            fail("GetProperty method should not throw an exception");
        }
    }

    @Test
    public void testShowTime() {
        long ms = 5000;
        String time = LagoonGUI.showTime(ms);
        assertEquals("in 5 s", time);
    }
}
```