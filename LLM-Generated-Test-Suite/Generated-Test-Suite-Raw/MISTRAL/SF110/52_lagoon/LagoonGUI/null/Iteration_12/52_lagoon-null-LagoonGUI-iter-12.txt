```java
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;
import nu.staldal.lagoon.LagoonGUI;
import java.awt.event.ActionEvent;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;

public class LagoonGUITest {

    private LagoonGUI lagoonGUI;

    @Before
    public void setUp() {
        lagoonGUI = new LagoonGUI();
    }

    @After
    public void tearDown() {
        lagoonGUI = null;
    }

    @Test
    public void testMain() {
        try {
            LagoonGUI.main(new String[]{});
        } catch (Exception e) {
            fail("Exception thrown: " + e.getMessage());
        }
    }

    @Test
    public void testWindowOpened() {
        lagoonGUI.windowOpened(new WindowEvent(lagoonGUI, WindowEvent.WINDOW_OPENED));
        // No specific behavior to test
    }

    @Test
    public void testWindowClosing() {
        lagoonGUI.windowClosing(new WindowEvent(lagoonGUI, WindowEvent.WINDOW_CLOSING));
        // Should call exit method
    }

    @Test
    public void testWindowClosed() {
        lagoonGUI.windowClosed(new WindowEvent(lagoonGUI, WindowEvent.WINDOW_CLOSED));
        // No specific behavior to test
    }

    @Test
    public void testWindowIconified() {
        lagoonGUI.windowIconified(new WindowEvent(lagoonGUI, WindowEvent.WINDOW_ICONIFIED));
        // No specific behavior to test
    }

    @Test
    public void testWindowDeiconified() {
        lagoonGUI.windowDeiconified(new WindowEvent(lagoonGUI, WindowEvent.WINDOW_DEICONIFIED));
        // No specific behavior to test
    }

    @Test
    public void testWindowActivated() {
        lagoonGUI.windowActivated(new WindowEvent(lagoonGUI, WindowEvent.WINDOW_ACTIVATED));
        // No specific behavior to test
    }

    @Test
    public void testWindowDeactivated() {
        lagoonGUI.windowDeactivated(new WindowEvent(lagoonGUI, WindowEvent.WINDOW_DEACTIVATED));
        // No specific behavior to test
    }

    @Test
    public void testBuild() {
        lagoonGUI.build(false);
        // Test the build method behavior
    }

    @Test
    public void testExit() {
        lagoonGUI.exit();
        // Test the exit method behavior
    }

    @Test
    public void testInit() {
        lagoonGUI.init();
        // Test the init method behavior
    }

    @Test
    public void testLoadPropertyFile() {
        lagoonGUI.loadPropertyFile();
        // Test the loadPropertyFile method behavior
    }

    @Test
    public void testLoadProperties() {
        try {
            File tempFile = File.createTempFile("testProperties", ".properties");
            Properties properties = new Properties();
            properties.setProperty("sitemapFile", "testSitemapFile");
            properties.setProperty("sourceDir", "testSourceDir");
            properties.setProperty("targetURL", "testTargetURL");
            properties.setProperty("password", "testPassword");
            properties.store(new FileOutputStream(tempFile), null);

            lagoonGUI.loadProperties(tempFile);

            assertEquals("testSitemapFile", lagoonGUI.sitemapFile.getValue());
            assertEquals("testSourceDir", lagoonGUI.sourceDir.getValue());
            assertEquals("testTargetURL", lagoonGUI.targetURL.getValue());
            assertEquals("testPassword", lagoonGUI.password);

            tempFile.delete();
        } catch (IOException e) {
            fail("Exception thrown: " + e.getMessage());
        }
    }

    @Test
    public void testSavePropertyFile() {
        lagoonGUI.savePropertyFile();
        // Test the savePropertyFile method behavior
    }

    @Test
    public void testGetProperty() {
        Properties properties = new Properties();
        properties.setProperty("testProperty", "testValue");

        try {
            assertEquals("testValue", LagoonGUI.getProperty(properties, "testProperty"));
        } catch (Exception e) {
            fail("Exception thrown: " + e.getMessage());
        }
    }

    @Test
    public void testShowTime() {
        assertEquals("in 500 ms", LagoonGUI.showTime(500));
        assertEquals("in 5 s", LagoonGUI.showTime(5000));
    }
}
```