```java
package com.allenstudio.ir.ui;

import com.allenstudio.ir.core.InspirentoMediator;
import com.allenstudio.ir.util.InspirentoUtilities;
import com.allenstudio.ir.util.UIResources;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.powermock.api.mockito.PowerMockito;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;

import javax.swing.*;
import java.net.URL;
import java.util.MissingResourceException;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

@RunWith(PowerMockRunner.class)
@PrepareForTest({UIResources.class, InspirentoUtilities.class})
public class MainMenuTest {

    @Mock
    private InspirentoMediator mediator;

    private MainMenu mainMenu;

    @Before
    public void setUp() {
        MockitoAnnotations.initMocks(this);
        PowerMockito.mockStatic(UIResources.class);
        PowerMockito.mockStatic(InspirentoUtilities.class);
        mainMenu = new MainMenu(mediator);
    }

    @Test
    public void testConstructor() {
        String[] menus = {"menu1", "menu2"};
        PowerMockito.when(InspirentoUtilities.tokenize(UIResources.getString("menu"))).thenReturn(menus);
        PowerMockito.when(UIResources.getString("menu1Label")).thenReturn("Menu1");
        PowerMockito.when(UIResources.getString("menu2Label")).thenReturn("Menu2");

        MainMenu mainMenu = new MainMenu(mediator);
        assertEquals(2, mainMenu.getMenuCount());
    }

    @Test
    public void testCreateMenu() {
        String menu = "menu1";
        PowerMockito.when(UIResources.getString(menu + "Label")).thenReturn("Menu1");
        PowerMockito.when(InspirentoUtilities.tokenize(UIResources.getString(menu))).thenReturn(new String[]{"item1", "item2"});
        PowerMockito.when(UIResources.getString("item1Label")).thenReturn("Item1");
        PowerMockito.when(UIResources.getString("item2Label")).thenReturn("Item2");

        JMenu jMenu = mainMenu.createMenu(menu);
        assertEquals("Menu1", jMenu.getText());
        assertEquals(2, jMenu.getItemCount());
    }

    @Test
    public void testCreateMenuWithMnemonic() {
        String menu = "menu1";
        PowerMockito.when(UIResources.getString(menu + "Label")).thenReturn("Menu1*M");
        PowerMockito.when(InspirentoUtilities.tokenize(UIResources.getString(menu))).thenReturn(new String[]{"item1", "item2"});
        PowerMockito.when(UIResources.getString("item1Label")).thenReturn("Item1");
        PowerMockito.when(UIResources.getString("item2Label")).thenReturn("Item2");

        JMenu jMenu = mainMenu.createMenu(menu);
        assertEquals("Menu1", jMenu.getText());
        assertEquals('M', jMenu.getMnemonic());
    }

    @Test
    public void testCreateMenuWithSubMenu() {
        String menu = "menu1";
        PowerMockito.when(UIResources.getString(menu + "Label")).thenReturn("Menu1");
        PowerMockito.when(InspirentoUtilities.tokenize(UIResources.getString(menu))).thenReturn(new String[]{"submenu1>", "item2"});
        PowerMockito.when(UIResources.getString("submenu1Label")).thenReturn("Submenu1");
        PowerMockito.when(UIResources.getString("item2Label")).thenReturn("Item2");

        JMenu jMenu = mainMenu.createMenu(menu);
        assertEquals("Menu1", jMenu.getText());
        assertEquals(2, jMenu.getItemCount());
        assertTrue(jMenu.getMenuComponent(0) instanceof JMenu);
    }

    @Test
    public void testCreateMenuWithCheckBoxMenuItem() {
        String menu = "menu1";
        PowerMockito.when(UIResources.getString(menu + "Label")).thenReturn("Menu1");
        PowerMockito.when(InspirentoUtilities.tokenize(UIResources.getString(menu))).thenReturn(new String[]{"#item1", "item2"});
        PowerMockito.when(UIResources.getString("item1Label")).thenReturn("Item1");
        PowerMockito.when(UIResources.getString("item2Label")).thenReturn("Item2");

        JMenu jMenu = mainMenu.createMenu(menu);
        assertEquals("Menu1", jMenu.getText());
        assertEquals(2, jMenu.getItemCount());
        assertTrue(jMenu.getMenuComponent(0) instanceof JCheckBoxMenuItem);
    }

    @Test
    public void testAddShortcutAndIcon() {
        JMenuItem item = new JMenuItem("Test");
        String key = "test";
        PowerMockito.when(UIResources.getString(key + "Shortcut")).thenReturn("ctrl T");
        PowerMockito.when(UIResources.getString(key + "Icon")).thenReturn("/path/to/icon.png");
        URL url = getClass().getResource("/path/to/icon.png");
        PowerMockito.when(mainMenu.getClass().getResource("/path/to/icon.png")).thenReturn(url);

        mainMenu.addShortcutAndIcon(item, key);
        assertEquals(KeyStroke.getKeyStroke("ctrl T"), item.getAccelerator());
        assertNotNull(item.getIcon());
    }

    @Test
    public void testChanged() {
        mainMenu.changed();
        // No implementation, so no assertions needed
    }
}
```