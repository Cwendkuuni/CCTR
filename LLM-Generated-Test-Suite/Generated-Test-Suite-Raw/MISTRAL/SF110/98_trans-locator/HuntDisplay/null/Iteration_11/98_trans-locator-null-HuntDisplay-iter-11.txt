```java
import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;
import Joshua.FoxHunt.HuntDisplay;
import Joshua.FoxHunt.TrigPoint;
import Joshua.FoxHunt.Landmark;
import java.awt.Dimension;
import java.awt.Color;
import javax.swing.ImageIcon;

public class HuntDisplayTest {

    private HuntDisplay huntDisplay;

    @Before
    public void setUp() {
        huntDisplay = new HuntDisplay();
    }

    @Test
    public void testConstructor() {
        assertNotNull(huntDisplay.points);
        assertNotNull(huntDisplay.landmarks);
        assertEquals(Color.WHITE, huntDisplay.getBackground());
        assertEquals(new Dimension(50, 50), huntDisplay.getMinimumSize());
        assertEquals(new Dimension(200, 200), huntDisplay.getPreferredSize());
    }

    @Test
    public void testGetPreferredSize() {
        assertEquals(new Dimension(200, 200), huntDisplay.getPreferredSize());
    }

    @Test
    public void testGetMinimumSize() {
        assertEquals(new Dimension(50, 50), huntDisplay.getMinimumSize());
    }

    @Test
    public void testAddPoint() {
        TrigPoint point = new TrigPoint(45.0, 90.0, 0.0, false);
        huntDisplay.addPoint(point);
        assertEquals(1, huntDisplay.points.size());
        TrigPoint addedPoint = (TrigPoint) huntDisplay.points.get(0);
        assertEquals(0.5, addedPoint.getY(), 0.001);
        assertEquals(0.5, addedPoint.getX(), 0.001);
        assertEquals(0.0, addedPoint.getTheta(), 0.001);
        assertFalse(addedPoint.isFox());
    }

    @Test
    public void testAddLandMark() {
        Landmark landmark = new Landmark(45.0, 90.0, new ImageIcon());
        huntDisplay.addLandMark(landmark);
        assertEquals(1, huntDisplay.landmarks.size());
        Landmark addedLandmark = (Landmark) huntDisplay.landmarks.get(0);
        assertEquals(0.5, addedLandmark.getLat(), 0.001);
        assertEquals(0.5, addedLandmark.getLon(), 0.001);
        assertNotNull(addedLandmark.getIcon());
    }

    @Test
    public void testPaintComponent() {
        // This test is more of a placeholder as paintComponent is a graphical method
        // and typically requires manual inspection or specialized testing frameworks.
        TrigPoint point = new TrigPoint(45.0, 90.0, 0.0, false);
        huntDisplay.addPoint(point);
        Landmark landmark = new Landmark(45.0, 90.0, new ImageIcon());
        huntDisplay.addLandMark(landmark);

        // Simulate painting
        huntDisplay.paintComponent(huntDisplay.getGraphics());

        // Manual inspection or additional frameworks would be needed to verify the painting.
    }
}
```