```java
package Joshua.FoxHunt;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Vector;

public class FoxHuntFrameTest {

    private FoxHuntFrame foxHuntFrame;

    @Before
    public void setUp() {
        foxHuntFrame = new FoxHuntFrame();
    }

    @Test
    public void testConstructor() {
        assertNotNull(foxHuntFrame);
        assertEquals("Triangulation", foxHuntFrame.getTitle());
        assertTrue(foxHuntFrame.isVisible());
    }

    @Test
    public void testActionPerformed() {
        foxHuntFrame.theta.setText("45");
        foxHuntFrame.lat.setText("34.05223");
        foxHuntFrame.lon.setText("-118.24368");

        foxHuntFrame.actionPerformed(new ActionEvent(foxHuntFrame.add, ActionEvent.ACTION_PERFORMED, null));

        assertEquals(1, foxHuntFrame.points.size());
    }

    @Test
    public void testAddPoint() {
        foxHuntFrame.theta.setText("45");
        foxHuntFrame.lat.setText("34.05223");
        foxHuntFrame.lon.setText("-118.24368");

        foxHuntFrame.addPoint();

        assertEquals(1, foxHuntFrame.points.size());

        foxHuntFrame.theta.setText("90");
        foxHuntFrame.lat.setText("34.05224");
        foxHuntFrame.lon.setText("-118.24369");

        foxHuntFrame.addPoint();

        assertEquals(2, foxHuntFrame.points.size());
        assertEquals(1, foxHuntFrame.fox.size());
    }

    @Test
    public void testFinalPrep() {
        foxHuntFrame.finalPrep();
        assertNotNull(foxHuntFrame.panel);
        assertNotNull(foxHuntFrame.panel3);
        assertNotNull(foxHuntFrame.zoom);
    }

    @Test
    public void testTextPrep() {
        foxHuntFrame.textPrep();
        assertNotNull(foxHuntFrame.theta);
        assertNotNull(foxHuntFrame.lat);
        assertNotNull(foxHuntFrame.lon);
        assertNotNull(foxHuntFrame.add);
        assertNotNull(foxHuntFrame.panel1);
    }

    @Test
    public void testTablePrep() {
        foxHuntFrame.tablePrep();
        assertNotNull(foxHuntFrame.posModel);
        assertNotNull(foxHuntFrame.pos);
        assertNotNull(foxHuntFrame.panel2);
    }

    @Test
    public void testDisplayPrep() {
        foxHuntFrame.displayPrep();
        assertNotNull(foxHuntFrame.display);
    }

    @Test
    public void testLoadLandmarks() {
        // Create a temporary file for testing
        File tempFile = new File("landmarks.cfg");
        try {
            tempFile.createNewFile();
            FileInputStream inFile = new FileInputStream(tempFile);
            foxHuntFrame.loadLandmarks();
            inFile.close();
        } catch (IOException e) {
            fail("IOException should not be thrown");
        } finally {
            tempFile.delete();
        }
    }

    @Test
    public void testError() {
        foxHuntFrame.error("Test Error");
        // This test is mainly to ensure that the error method does not throw an exception
    }

    @Test
    public void testFoxTableModel() {
        FoxHuntFrame.FoxTableModel model = foxHuntFrame.new FoxTableModel();
        assertEquals(2, model.getColumnCount());
        assertEquals(0, model.getRowCount());
        assertEquals("Lattitude", model.getColumnName(0));
        assertEquals("Longitude", model.getColumnName(1));
        assertFalse(model.isCellEditable(0, 0));
    }
}
```