```java
package Joshua.FoxHunt;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Vector;

public class FoxHuntFrameTest {

    private FoxHuntFrame foxHuntFrame;

    @Before
    public void setUp() {
        foxHuntFrame = new FoxHuntFrame();
    }

    @Test
    public void testConstructor() {
        assertNotNull(foxHuntFrame);
        assertEquals("Triangulation", foxHuntFrame.getTitle());
        assertTrue(foxHuntFrame.isVisible());
    }

    @Test
    public void testActionPerformed() {
        foxHuntFrame.theta.setText("45");
        foxHuntFrame.lat.setText("34.0522");
        foxHuntFrame.lon.setText("-118.2437");

        foxHuntFrame.actionPerformed(new ActionEvent(this, ActionEvent.ACTION_PERFORMED, null));

        assertEquals(1, foxHuntFrame.points.size());
    }

    @Test
    public void testAddPoint() {
        foxHuntFrame.theta.setText("45");
        foxHuntFrame.lat.setText("34.0522");
        foxHuntFrame.lon.setText("-118.2437");

        foxHuntFrame.addPoint();

        assertEquals(1, foxHuntFrame.points.size());

        foxHuntFrame.theta.setText("90");
        foxHuntFrame.lat.setText("34.0523");
        foxHuntFrame.lon.setText("-118.2438");

        foxHuntFrame.addPoint();

        assertEquals(2, foxHuntFrame.points.size());
        assertEquals(1, foxHuntFrame.fox.size());
    }

    @Test
    public void testLoadLandmarks() throws IOException {
        File tempFile = File.createTempFile("landmarks", ".cfg");
        try (FileWriter writer = new FileWriter(tempFile)) {
            writer.write("NUM 2\n");
            writer.write("FILE icon1.gif\n");
            writer.write("LAT 34.0522\n");
            writer.write("LON -118.2437\n");
            writer.write("FILE icon2.gif\n");
            writer.write("LAT 34.0523\n");
            writer.write("LON -118.2438\n");
        }

        // Mock the loadLandmarks method to use the temp file
        foxHuntFrame.loadLandmarks();

        assertEquals(2, foxHuntFrame.display.getLandmarks().size());

        tempFile.delete();
    }

    @Test
    public void testErrorDialogAbort() {
        JOptionPane.showOptionDialog(foxHuntFrame, "Test Error", "Error", JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE, null, new Object[]{"Abort", "Continue"}, "Abort");

        foxHuntFrame.error("Test Error");

        // This test will terminate the JVM, so it's not practical to assert anything after this point.
    }

    @Test
    public void testFoxTableModel() {
        FoxTableModel model = foxHuntFrame.new FoxTableModel();

        assertEquals(2, model.getColumnCount());
        assertEquals(0, model.getRowCount());

        foxHuntFrame.fox.add(new TrigPoint(34.0522, -118.2437, 45));

        assertEquals(1, model.getRowCount());
        assertEquals("34.0522", model.getValueAt(0, 0));
        assertEquals("-118.2437", model.getValueAt(0, 1));
    }
}
```