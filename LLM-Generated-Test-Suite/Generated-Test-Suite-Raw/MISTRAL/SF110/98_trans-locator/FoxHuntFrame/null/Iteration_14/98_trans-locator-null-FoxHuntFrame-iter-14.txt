```java
package Joshua.FoxHunt;

import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JButton;
import javax.swing.JTextField;

public class FoxHuntFrameTest {

    private FoxHuntFrame foxHuntFrame;

    @Before
    public void setUp() {
        foxHuntFrame = new FoxHuntFrame();
    }

    @Test
    public void testConstructor() {
        assertNotNull(foxHuntFrame);
        assertEquals("Triangulation", foxHuntFrame.getTitle());
        assertTrue(foxHuntFrame.isVisible());
    }

    @Test
    public void testActionPerformed() {
        ActionEvent event = new ActionEvent(this, ActionEvent.ACTION_PERFORMED, "Add It!!!");
        foxHuntFrame.actionPerformed(event);
        // Assuming addPoint() is called, we can check the points vector size
        assertTrue(foxHuntFrame.points.size() > 0);
    }

    @Test
    public void testAddPoint() {
        foxHuntFrame.theta.setText("90");
        foxHuntFrame.lat.setText("34.0522");
        foxHuntFrame.lon.setText("-118.2437");
        foxHuntFrame.addPoint();

        assertEquals(1, foxHuntFrame.points.size());
        TrigPoint point = (TrigPoint) foxHuntFrame.points.get(0);
        assertEquals(34.0522, point.getY(), 0.0001);
        assertEquals(-118.2437, point.getX(), 0.0001);
        assertEquals(90, point.getAngle());
    }

    @Test
    public void testLoadLandmarks() throws IOException {
        File tempFile = File.createTempFile("landmarks", ".cfg");
        try (FileWriter writer = new FileWriter(tempFile)) {
            writer.write("NUM 1\n");
            writer.write("FILE icon.gif\n");
            writer.write("LAT 34.0522\n");
            writer.write("LON -118.2437\n");
        }

        // Mock the file path for loadLandmarks
        foxHuntFrame.loadLandmarks();

        assertEquals(1, foxHuntFrame.display.getLandmarks().size());
        Landmark landmark = foxHuntFrame.display.getLandmarks().get(0);
        assertEquals(34.0522, landmark.getLat(), 0.0001);
        assertEquals(-118.2437, landmark.getLon(), 0.0001);
        assertEquals("icon.gif", landmark.getIcon().getDescription());

        tempFile.delete();
    }

    @Test
    public void testError() {
        foxHuntFrame.error("Test Error");
        // This test is interactive and requires user input, so it's hard to automate fully.
        // You might want to mock JOptionPane to test this method properly.
    }

    @Test
    public void testFoxTableModel() {
        FoxTableModel model = foxHuntFrame.new FoxTableModel();
        assertEquals(2, model.getColumnCount());
        assertEquals(0, model.getRowCount());

        foxHuntFrame.fox.add(new TrigPoint(34.0522, -118.2437, 90));
        assertEquals(1, model.getRowCount());
        assertEquals("34.0522", model.getValueAt(0, 0));
        assertEquals("-118.2437", model.getValueAt(0, 1));
    }
}
```