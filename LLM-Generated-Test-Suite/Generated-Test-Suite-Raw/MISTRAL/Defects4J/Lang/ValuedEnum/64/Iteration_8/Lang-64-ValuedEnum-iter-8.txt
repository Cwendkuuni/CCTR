Certainly! Below is a comprehensive JUnit 4 test suite for the `ValuedEnum` class. This test suite covers all the methods in the `ValuedEnum` class.

```java
import org.apache.commons.lang.enums.ValuedEnum;
import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;

public class ValuedEnumTest {

    private static class TestEnum extends ValuedEnum {
        public static final int VALUE1 = 1;
        public static final int VALUE2 = 2;
        public static final TestEnum ENUM1 = new TestEnum("Enum1", VALUE1);
        public static final TestEnum ENUM2 = new TestEnum("Enum2", VALUE2);

        private TestEnum(String name, int value) {
            super(name, value);
        }

        public static TestEnum getEnum(String name) {
            return (TestEnum) getEnum(TestEnum.class, name);
        }

        public static TestEnum getEnum(int value) {
            return (TestEnum) getEnum(TestEnum.class, value);
        }
    }

    @Before
    public void setUp() {
        // Any setup required before each test
    }

    @Test
    public void testGetValue() {
        assertEquals(TestEnum.VALUE1, TestEnum.ENUM1.getValue());
        assertEquals(TestEnum.VALUE2, TestEnum.ENUM2.getValue());
    }

    @Test
    public void testGetEnumByValue() {
        assertEquals(TestEnum.ENUM1, TestEnum.getEnum(TestEnum.VALUE1));
        assertEquals(TestEnum.ENUM2, TestEnum.getEnum(TestEnum.VALUE2));
        assertNull(TestEnum.getEnum(3));
    }

    @Test(expected = IllegalArgumentException.class)
    public void testGetEnumByValueWithNullClass() {
        ValuedEnum.getEnum(null, 1);
    }

    @Test
    public void testCompareTo() {
        assertTrue(TestEnum.ENUM1.compareTo(TestEnum.ENUM2) < 0);
        assertTrue(TestEnum.ENUM2.compareTo(TestEnum.ENUM1) > 0);
        assertEquals(0, TestEnum.ENUM1.compareTo(TestEnum.ENUM1));
    }

    @Test(expected = ClassCastException.class)
    public void testCompareToWithDifferentType() {
        TestEnum.ENUM1.compareTo(new Object());
    }

    @Test(expected = NullPointerException.class)
    public void testCompareToWithNull() {
        TestEnum.ENUM1.compareTo(null);
    }

    @Test
    public void testToString() {
        assertEquals("TestEnum[Enum1=1]", TestEnum.ENUM1.toString());
        assertEquals("TestEnum[Enum2=2]", TestEnum.ENUM2.toString());
    }
}
```

This test suite includes:
- A nested `TestEnum` class that extends `ValuedEnum` for testing purposes.
- Tests for the `getValue` method.
- Tests for the `getEnum` method, including edge cases and invalid inputs.
- Tests for the `compareTo` method, including edge cases and invalid inputs.
- Tests for the `toString` method.

Each test method is designed to verify the correctness of the corresponding method in the `ValuedEnum` class.