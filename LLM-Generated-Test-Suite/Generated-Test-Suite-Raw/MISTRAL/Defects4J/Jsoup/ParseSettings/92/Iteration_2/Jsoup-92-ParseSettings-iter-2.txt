```java
package org.jsoup.parser;

import org.junit.Before;
import org.junit.Test;
import org.jsoup.nodes.Attributes;

import static org.junit.Assert.*;

public class ParseSettingsTest {

    private ParseSettings htmlDefault;
    private ParseSettings preserveCase;
    private ParseSettings customSettings;

    @Before
    public void setUp() {
        htmlDefault = ParseSettings.htmlDefault;
        preserveCase = ParseSettings.preserveCase;
        customSettings = new ParseSettings(true, false);
    }

    @Test
    public void testHtmlDefaultSettings() {
        assertFalse(htmlDefault.preserveTagCase());
        assertFalse(htmlDefault.preserveAttributeCase());
    }

    @Test
    public void testPreserveCaseSettings() {
        assertTrue(preserveCase.preserveTagCase());
        assertTrue(preserveCase.preserveAttributeCase());
    }

    @Test
    public void testCustomSettings() {
        assertTrue(customSettings.preserveTagCase());
        assertFalse(customSettings.preserveAttributeCase());
    }

    @Test
    public void testNormalizeTag() {
        assertEquals("div", htmlDefault.normalizeTag("DIV"));
        assertEquals("DIV", preserveCase.normalizeTag("DIV"));
        assertEquals("DIV", customSettings.normalizeTag("DIV"));
    }

    @Test
    public void testNormalizeAttribute() {
        assertEquals("class", htmlDefault.normalizeAttribute("CLASS"));
        assertEquals("CLASS", preserveCase.normalizeAttribute("CLASS"));
        assertEquals("class", customSettings.normalizeAttribute("CLASS"));
    }

    @Test
    public void testNormalizeAttributes() {
        Attributes attributes = new Attributes();
        attributes.put("CLASS", "value");

        Attributes normalizedAttributes = htmlDefault.normalizeAttributes(attributes);
        assertEquals("class", normalizedAttributes.get("class"));

        normalizedAttributes = preserveCase.normalizeAttributes(attributes);
        assertEquals("CLASS", normalizedAttributes.get("CLASS"));

        normalizedAttributes = customSettings.normalizeAttributes(attributes);
        assertEquals("class", normalizedAttributes.get("class"));
    }
}
```