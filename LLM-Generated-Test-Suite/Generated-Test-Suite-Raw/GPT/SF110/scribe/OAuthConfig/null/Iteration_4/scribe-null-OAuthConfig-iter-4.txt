Certainly! Below is a JUnit 4 test suite for the `OAuthConfig` class. This suite tests all the methods in the class, ensuring that they behave as expected.

```java
import org.junit.Before;
import org.junit.Test;
import org.scribe.model.OAuthConfig;
import org.scribe.model.SignatureType;

import static org.junit.Assert.*;

public class OAuthConfigTest {

    private static final String API_KEY = "testApiKey";
    private static final String API_SECRET = "testApiSecret";
    private static final String CALLBACK = "http://callback.url";
    private static final String SCOPE = "testScope";

    private OAuthConfig configWithAllParams;
    private OAuthConfig configWithMandatoryParams;

    @Before
    public void setUp() {
        configWithAllParams = new OAuthConfig(API_KEY, API_SECRET, CALLBACK, SignatureType.QueryString, SCOPE);
        configWithMandatoryParams = new OAuthConfig(API_KEY, API_SECRET);
    }

    @Test
    public void testGetApiKey() {
        assertEquals(API_KEY, configWithAllParams.getApiKey());
        assertEquals(API_KEY, configWithMandatoryParams.getApiKey());
    }

    @Test
    public void testGetApiSecret() {
        assertEquals(API_SECRET, configWithAllParams.getApiSecret());
        assertEquals(API_SECRET, configWithMandatoryParams.getApiSecret());
    }

    @Test
    public void testGetCallback() {
        assertEquals(CALLBACK, configWithAllParams.getCallback());
        assertEquals("oob", configWithMandatoryParams.getCallback());
    }

    @Test
    public void testGetSignatureType() {
        assertEquals(SignatureType.QueryString, configWithAllParams.getSignatureType());
        assertEquals(SignatureType.Header, configWithMandatoryParams.getSignatureType());
    }

    @Test
    public void testGetScope() {
        assertEquals(SCOPE, configWithAllParams.getScope());
        assertNull(configWithMandatoryParams.getScope());
    }

    @Test
    public void testHasScope() {
        assertTrue(configWithAllParams.hasScope());
        assertFalse(configWithMandatoryParams.hasScope());
    }
}
```

### Explanation:
- **setUp Method**: Initializes two `OAuthConfig` objects, one with all parameters and another with only the mandatory parameters.
- **Test Methods**: Each method tests a specific functionality of the `OAuthConfig` class:
  - `testGetApiKey` and `testGetApiSecret` verify that the API key and secret are correctly returned.
  - `testGetCallback` checks the callback URL, ensuring the default "oob" is used when none is provided.
  - `testGetSignatureType` ensures the correct signature type is returned, defaulting to `SignatureType.Header` when not specified.
  - `testGetScope` and `testHasScope` verify the behavior of the scope-related methods, checking both the presence and absence of a scope.