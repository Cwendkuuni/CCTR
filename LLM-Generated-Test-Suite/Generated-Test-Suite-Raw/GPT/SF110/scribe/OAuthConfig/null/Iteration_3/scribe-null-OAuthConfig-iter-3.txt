```java
import org.junit.Before;
import org.junit.Test;
import org.scribe.model.OAuthConfig;
import org.scribe.model.SignatureType;

import static org.junit.Assert.*;

public class OAuthConfigTest {

    private OAuthConfig configWithAllParams;
    private OAuthConfig configWithMandatoryParams;

    @Before
    public void setUp() {
        configWithAllParams = new OAuthConfig("testKey", "testSecret", "http://callback.com", SignatureType.QueryString, "testScope");
        configWithMandatoryParams = new OAuthConfig("testKey", "testSecret");
    }

    @Test
    public void testGetApiKey() {
        assertEquals("testKey", configWithAllParams.getApiKey());
        assertEquals("testKey", configWithMandatoryParams.getApiKey());
    }

    @Test
    public void testGetApiSecret() {
        assertEquals("testSecret", configWithAllParams.getApiSecret());
        assertEquals("testSecret", configWithMandatoryParams.getApiSecret());
    }

    @Test
    public void testGetCallback() {
        assertEquals("http://callback.com", configWithAllParams.getCallback());
        assertEquals("oob", configWithMandatoryParams.getCallback());
    }

    @Test
    public void testGetSignatureType() {
        assertEquals(SignatureType.QueryString, configWithAllParams.getSignatureType());
        assertEquals(SignatureType.Header, configWithMandatoryParams.getSignatureType());
    }

    @Test
    public void testGetScope() {
        assertEquals("testScope", configWithAllParams.getScope());
        assertNull(configWithMandatoryParams.getScope());
    }

    @Test
    public void testHasScope() {
        assertTrue(configWithAllParams.hasScope());
        assertFalse(configWithMandatoryParams.hasScope());
    }
}
```