Certainly! Below is a complete JUnit 4 test suite for the `OAuthConfig` class. This test suite covers all the methods in the class, including constructors and getters.

```java
import org.junit.Before;
import org.junit.Test;
import org.scribe.model.OAuthConfig;
import org.scribe.model.SignatureType;

import static org.junit.Assert.*;

public class OAuthConfigTest {

    private static final String API_KEY = "testApiKey";
    private static final String API_SECRET = "testApiSecret";
    private static final String CALLBACK = "http://callback.url";
    private static final String DEFAULT_CALLBACK = "oob";
    private static final SignatureType SIGNATURE_TYPE = SignatureType.QueryString;
    private static final SignatureType DEFAULT_SIGNATURE_TYPE = SignatureType.Header;
    private static final String SCOPE = "testScope";

    private OAuthConfig configWithAllParams;
    private OAuthConfig configWithMandatoryParams;

    @Before
    public void setUp() {
        configWithAllParams = new OAuthConfig(API_KEY, API_SECRET, CALLBACK, SIGNATURE_TYPE, SCOPE);
        configWithMandatoryParams = new OAuthConfig(API_KEY, API_SECRET);
    }

    @Test
    public void testGetApiKey() {
        assertEquals(API_KEY, configWithAllParams.getApiKey());
        assertEquals(API_KEY, configWithMandatoryParams.getApiKey());
    }

    @Test
    public void testGetApiSecret() {
        assertEquals(API_SECRET, configWithAllParams.getApiSecret());
        assertEquals(API_SECRET, configWithMandatoryParams.getApiSecret());
    }

    @Test
    public void testGetCallback() {
        assertEquals(CALLBACK, configWithAllParams.getCallback());
        assertEquals(DEFAULT_CALLBACK, configWithMandatoryParams.getCallback());
    }

    @Test
    public void testGetSignatureType() {
        assertEquals(SIGNATURE_TYPE, configWithAllParams.getSignatureType());
        assertEquals(DEFAULT_SIGNATURE_TYPE, configWithMandatoryParams.getSignatureType());
    }

    @Test
    public void testGetScope() {
        assertEquals(SCOPE, configWithAllParams.getScope());
        assertNull(configWithMandatoryParams.getScope());
    }

    @Test
    public void testHasScope() {
        assertTrue(configWithAllParams.hasScope());
        assertFalse(configWithMandatoryParams.hasScope());
    }
}
```

This test suite includes:

- Tests for both constructors to ensure they initialize the fields correctly.
- Tests for each getter method to verify they return the expected values.
- A test for the `hasScope` method to check its behavior when the scope is present and when it is not.