```java
import org.junit.Test;
import org.scribe.model.Token;

import static org.junit.Assert.*;

public class TokenTest {

    @Test
    public void testConstructorWithTwoParameters() {
        String tokenValue = "testToken";
        String secretValue = "testSecret";
        
        Token token = new Token(tokenValue, secretValue);
        
        assertEquals(tokenValue, token.getToken());
        assertEquals(secretValue, token.getSecret());
    }

    @Test
    public void testConstructorWithThreeParameters() {
        String tokenValue = "testToken";
        String secretValue = "testSecret";
        String rawResponseValue = "testRawResponse";
        
        Token token = new Token(tokenValue, secretValue, rawResponseValue);
        
        assertEquals(tokenValue, token.getToken());
        assertEquals(secretValue, token.getSecret());
        assertEquals(rawResponseValue, token.getRawResponse());
    }

    @Test(expected = IllegalStateException.class)
    public void testGetRawResponseThrowsExceptionWhenNull() {
        String tokenValue = "testToken";
        String secretValue = "testSecret";
        
        Token token = new Token(tokenValue, secretValue);
        
        token.getRawResponse(); // This should throw an IllegalStateException
    }

    @Test
    public void testToString() {
        String tokenValue = "testToken";
        String secretValue = "testSecret";
        
        Token token = new Token(tokenValue, secretValue);
        
        String expectedString = "Token[testToken , testSecret]";
        assertEquals(expectedString, token.toString());
    }
}
```