To create a comprehensive JUnit 4 test suite for the `SAXDirParser` class, we need to test each method, including the handling of XML elements and attributes. Below is a test suite that covers the functionality of the `SAXDirParser` class:

```java
package com.jstevh.viewer;

import org.junit.Before;
import org.junit.Test;
import org.xml.sax.Attributes;
import org.xml.sax.helpers.AttributesImpl;

import java.util.HashMap;

import static org.junit.Assert.*;

public class SAXDirParserTest {

    private SAXDirParser parser;

    @Before
    public void setUp() throws Exception {
        parser = new SAXDirParser();
    }

    @Test
    public void testGetWebData() {
        assertEquals("", parser.getWebData());
    }

    @Test
    public void testStartElementBrowserLoc() throws Exception {
        Attributes atts = new AttributesImpl();
        parser.startElement("", "", "BrowserLoc", atts);
        parser.characters("http://example.com".toCharArray(), 0, "http://example.com".length());
        assertEquals("http://example.com", SAXDirParser.getLocalBrowser());
    }

    @Test
    public void testStartElementEditor() throws Exception {
        Attributes atts = new AttributesImpl();
        parser.startElement("", "", "Editor", atts);
        parser.characters("vim".toCharArray(), 0, "vim".length());
        assertEquals("vim", SAXDirParser.getEditor());
    }

    @Test
    public void testStartElementAcceptsLineNumberYes() throws Exception {
        Attributes atts = new AttributesImpl();
        parser.startElement("", "", "acceptsLineNumber", atts);
        parser.characters("Yes".toCharArray(), 0, "Yes".length());
        assertTrue(SAXDirParser.acceptsLineNumber());
    }

    @Test
    public void testStartElementAcceptsLineNumberNo() throws Exception {
        Attributes atts = new AttributesImpl();
        parser.startElement("", "", "acceptsLineNumber", atts);
        parser.characters("No".toCharArray(), 0, "No".length());
        assertFalse(SAXDirParser.acceptsLineNumber());
    }

    @Test
    public void testStartElementParameter() throws Exception {
        Attributes atts = new AttributesImpl();
        parser.startElement("", "", "parameter", atts);
        parser.characters("paramValue".toCharArray(), 0, "paramValue".length());
        assertEquals("paramValue", SAXDirParser.lineNumberParameter());
    }

    @Test
    public void testStartElementWeb() throws Exception {
        Attributes atts = new AttributesImpl();
        parser.startElement("", "", "Web", atts);
        parser.characters("http://example.com".toCharArray(), 0, "http://example.com".length());
        assertEquals("http://example.com", parser.location);
    }

    @Test
    public void testStartElementLocalYes() throws Exception {
        Attributes atts = new AttributesImpl();
        parser.startElement("", "", "Local", atts);
        parser.characters("Yes".toCharArray(), 0, "Yes".length());
        assertTrue(parser.local);
    }

    @Test
    public void testStartElementLocalNo() throws Exception {
        Attributes atts = new AttributesImpl();
        parser.startElement("", "", "Local", atts);
        parser.characters("No".toCharArray(), 0, "No".length());
        assertFalse(parser.local);
    }

    @Test
    public void testStartElementPkg() throws Exception {
        Attributes atts = new AttributesImpl();
        parser.startElement("", "", "Web", atts);
        parser.characters("http://example.com".toCharArray(), 0, "http://example.com".length());
        parser.startElement("", "", "pkg", atts);
        parser.characters("com.example.".toCharArray(), 0, "com.example.".length());
        HashMap<String, String> directory = SAXDirParser.getDirectory();
        assertEquals("http://example.com", directory.get("com.example"));
    }

    @Test
    public void testGetLocalPackages() throws Exception {
        Attributes atts = new AttributesImpl();
        parser.startElement("", "", "Local", atts);
        parser.characters("Yes".toCharArray(), 0, "Yes".length());
        parser.startElement("", "", "pkg", atts);
        parser.characters("com.example.".toCharArray(), 0, "com.example.".length());
        assertNotNull(SAXDirParser.getLocalPackages());
        assertTrue(SAXDirParser.getLocalPackages().contains("com.example"));
    }

    @Test
    public void testEndElementGroup() throws Exception {
        Attributes atts = new AttributesImpl();
        parser.startElement("", "", "Group", atts);
        parser.endElement("", "", "Group");
        assertFalse(parser.check);
    }
}
```

### Explanation:
- **Setup**: The `setUp` method initializes a new `SAXDirParser` instance before each test.
- **Test Methods**: Each test method corresponds to a specific functionality or method in the `SAXDirParser` class.
- **XML Element Handling**: The `startElement`, `characters`, and `endElement` methods are tested by simulating SAX parsing events.
- **Assertions**: Each test uses assertions to verify that the class behaves as expected, such as checking the values of static fields and the results of method calls.

This test suite should cover the main functionalities of the `SAXDirParser` class. Adjustments may be needed based on the actual XML content and expected behavior.