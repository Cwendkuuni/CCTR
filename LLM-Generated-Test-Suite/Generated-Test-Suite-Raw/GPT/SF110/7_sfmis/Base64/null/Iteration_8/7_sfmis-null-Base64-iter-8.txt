Certainly! Below is a JUnit 4 test suite for the `Base64` class. This suite includes tests for all public methods, covering various scenarios including valid and invalid inputs.

```java
import static org.junit.Assert.*;
import org.junit.Test;
import com.hf.sfm.crypt.Base64;

public class Base64Test {

    @Test
    public void testAltBase64ToByteArray_ValidInput() {
        String input = "!\"#$%&'()*,-.:;<=>@[\\]^_`{|}~abc";
        byte[] expectedOutput = "Man".getBytes();
        assertArrayEquals(expectedOutput, Base64.altBase64ToByteArray(input));
    }

    @Test(expected = IllegalArgumentException.class)
    public void testAltBase64ToByteArray_InvalidLength() {
        String input = "abc";
        Base64.altBase64ToByteArray(input);
    }

    @Test(expected = IllegalArgumentException.class)
    public void testAltBase64ToByteArray_InvalidCharacter() {
        String input = "abcd$";
        Base64.altBase64ToByteArray(input);
    }

    @Test
    public void testBase64ToByteArray_ValidInput() {
        String input = "TWFu";
        byte[] expectedOutput = "Man".getBytes();
        assertArrayEquals(expectedOutput, Base64.base64ToByteArray(input));
    }

    @Test(expected = IllegalArgumentException.class)
    public void testBase64ToByteArray_InvalidLength() {
        String input = "abc";
        Base64.base64ToByteArray(input);
    }

    @Test(expected = IllegalArgumentException.class)
    public void testBase64ToByteArray_InvalidCharacter() {
        String input = "abcd$";
        Base64.base64ToByteArray(input);
    }

    @Test
    public void testByteArrayToAltBase64() {
        byte[] input = "Man".getBytes();
        String expectedOutput = "!\"#$";
        assertEquals(expectedOutput, Base64.byteArrayToAltBase64(input));
    }

    @Test
    public void testByteArrayToBase64() {
        byte[] input = "Man".getBytes();
        String expectedOutput = "TWFu";
        assertEquals(expectedOutput, Base64.byteArrayToBase64(input));
    }

    @Test
    public void testByteArrayToBase64_EmptyArray() {
        byte[] input = new byte[0];
        String expectedOutput = "";
        assertEquals(expectedOutput, Base64.byteArrayToBase64(input));
    }

    @Test
    public void testByteArrayToAltBase64_EmptyArray() {
        byte[] input = new byte[0];
        String expectedOutput = "";
        assertEquals(expectedOutput, Base64.byteArrayToAltBase64(input));
    }
}
```

### Explanation:
- **Valid Input Tests**: These tests check if the methods correctly encode and decode valid Base64 and alternative Base64 strings.
- **Invalid Input Tests**: These tests ensure that the methods throw `IllegalArgumentException` when given inputs of incorrect length or containing illegal characters.
- **Empty Array Tests**: These tests verify that encoding an empty byte array results in an empty string.

This test suite should cover the primary functionality of the `Base64` class. Adjust the expected outputs as necessary based on the actual behavior of the encoding and decoding methods.