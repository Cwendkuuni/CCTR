Certainly! Below is a JUnit 4 test suite for the `Base64` class. This suite includes tests for each public method, covering various scenarios including valid inputs, invalid inputs, and edge cases.

```java
import static org.junit.Assert.*;
import org.junit.Test;
import com.hf.sfm.crypt.Base64;

public class Base64Test {

    @Test
    public void testAltBase64ToByteArray_ValidInput() {
        String input = "!\"#$";
        byte[] expectedOutput = new byte[] {0, 1, 2};
        assertArrayEquals(expectedOutput, Base64.altBase64ToByteArray(input));
    }

    @Test(expected = IllegalArgumentException.class)
    public void testAltBase64ToByteArray_InvalidLength() {
        String input = "!\"#";
        Base64.altBase64ToByteArray(input);
    }

    @Test(expected = IllegalArgumentException.class)
    public void testAltBase64ToByteArray_InvalidCharacter() {
        String input = "!\"#$%";
        Base64.altBase64ToByteArray(input);
    }

    @Test
    public void testBase64ToByteArray_ValidInput() {
        String input = "QUJD";
        byte[] expectedOutput = new byte[] {65, 66, 67};
        assertArrayEquals(expectedOutput, Base64.base64ToByteArray(input));
    }

    @Test(expected = IllegalArgumentException.class)
    public void testBase64ToByteArray_InvalidLength() {
        String input = "QUJ";
        Base64.base64ToByteArray(input);
    }

    @Test(expected = IllegalArgumentException.class)
    public void testBase64ToByteArray_InvalidCharacter() {
        String input = "QUJD$";
        Base64.base64ToByteArray(input);
    }

    @Test
    public void testByteArrayToAltBase64_ValidInput() {
        byte[] input = new byte[] {0, 1, 2};
        String expectedOutput = "!\"#$";
        assertEquals(expectedOutput, Base64.byteArrayToAltBase64(input));
    }

    @Test
    public void testByteArrayToAltBase64_EmptyInput() {
        byte[] input = new byte[] {};
        String expectedOutput = "";
        assertEquals(expectedOutput, Base64.byteArrayToAltBase64(input));
    }

    @Test
    public void testByteArrayToBase64_ValidInput() {
        byte[] input = new byte[] {65, 66, 67};
        String expectedOutput = "QUJD";
        assertEquals(expectedOutput, Base64.byteArrayToBase64(input));
    }

    @Test
    public void testByteArrayToBase64_EmptyInput() {
        byte[] input = new byte[] {};
        String expectedOutput = "";
        assertEquals(expectedOutput, Base64.byteArrayToBase64(input));
    }
}
```

### Explanation:
- **Valid Input Tests**: These tests check if the methods correctly encode and decode valid Base64 and alternative Base64 strings.
- **Invalid Length Tests**: These tests ensure that the methods throw an `IllegalArgumentException` when the input string length is not a multiple of four.
- **Invalid Character Tests**: These tests ensure that the methods throw an `IllegalArgumentException` when the input string contains illegal characters.
- **Empty Input Tests**: These tests verify that encoding an empty byte array results in an empty string.

This test suite should provide comprehensive coverage for the `Base64` class methods.