```java
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import de.paragon.explorer.model.AttributeModel;
import de.paragon.explorer.model.AttributeModelComparator;
import org.junit.Before;
import org.junit.Test;

public class AttributeModelComparatorTest {

    private AttributeModelComparator comparator;

    @Before
    public void setUp() {
        comparator = new AttributeModelComparator();
    }

    @Test
    public void testCompare_BothNull() {
        int result = comparator.compare(null, null);
        assertEquals(0, result);
    }

    @Test
    public void testCompare_FirstNull() {
        AttributeModel o2 = new AttributeModel("b");
        int result = comparator.compare(null, o2);
        assertEquals(-1, result);
    }

    @Test
    public void testCompare_SecondNull() {
        AttributeModel o1 = new AttributeModel("b");
        int result = comparator.compare(o1, null);
        assertEquals(1, result);
    }

    @Test
    public void testCompare_BothEqual() {
        AttributeModel o1 = new AttributeModel("a");
        AttributeModel o2 = new AttributeModel("a");
        int result = comparator.compare(o1, o2);
        assertEquals(0, result);
    }

    @Test
    public void testCompare_FirstLessThanSecond() {
        AttributeModel o1 = new AttributeModel("a");
        AttributeModel o2 = new AttributeModel("b");
        int result = comparator.compare(o1, o2);
        assertEquals(-1, result);
    }

    @Test
    public void testCompare_SecondLessThanFirst() {
        AttributeModel o1 = new AttributeModel("b");
        AttributeModel o2 = new AttributeModel("a");
        int result = comparator.compare(o1, o2);
        assertEquals(1, result);
    }

    @Test
    public void testCompare_FirstBeforeA_SecondAfterA() {
        AttributeModel o1 = new AttributeModel("A");
        AttributeModel o2 = new AttributeModel("b");
        int result = comparator.compare(o1, o2);
        assertEquals(1, result);
    }

    @Test
    public void testCompare_FirstAfterA_SecondBeforeA() {
        AttributeModel o1 = new AttributeModel("b");
        AttributeModel o2 = new AttributeModel("A");
        int result = comparator.compare(o1, o2);
        assertEquals(-1, result);
    }

    @Test
    public void testCompare_CaseInsensitive() {
        AttributeModel o1 = new AttributeModel("a");
        AttributeModel o2 = new AttributeModel("A");
        int result = comparator.compare(o1, o2);
        assertEquals(0, result);
    }

    @Test
    public void testCompare_FirstBeforeA_SecondBeforeA() {
        AttributeModel o1 = new AttributeModel("A");
        AttributeModel o2 = new AttributeModel("B");
        int result = comparator.compare(o1, o2);
        assertTrue(result < 0);
    }

    @Test
    public void testCompare_FirstAfterA_SecondAfterA() {
        AttributeModel o1 = new AttributeModel("b");
        AttributeModel o2 = new AttributeModel("c");
        int result = comparator.compare(o1, o2);
        assertTrue(result < 0);
    }
}
```

Note: This test suite assumes the existence of an `AttributeModel` class with a `getName()` method that returns a `String`. You may need to adjust the test suite if the `AttributeModel` class has a different structure or if additional setup is required.