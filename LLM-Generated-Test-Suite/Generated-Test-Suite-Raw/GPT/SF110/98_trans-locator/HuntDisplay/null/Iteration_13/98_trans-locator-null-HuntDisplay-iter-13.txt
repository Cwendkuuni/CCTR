Certainly! Below is a JUnit 4 test suite for the `HuntDisplay` class. This test suite assumes that the `TrigPoint` and `Landmark` classes, as well as their methods, are correctly defined and accessible. The test suite covers the basic functionality of the `HuntDisplay` class.

```java
import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.Test;
import javax.swing.*;
import java.awt.*;
import java.util.Vector;

public class HuntDisplayTest {

    private HuntDisplay huntDisplay;

    @Before
    public void setUp() {
        huntDisplay = new HuntDisplay();
    }

    @Test
    public void testConstructor() {
        assertNotNull(huntDisplay.points);
        assertNotNull(huntDisplay.landmarks);
        assertEquals(new Dimension(50, 50), huntDisplay.getMinimumSize());
        assertEquals(new Dimension(200, 200), huntDisplay.getPreferredSize());
        assertEquals(Color.WHITE, huntDisplay.getBackground());
    }

    @Test
    public void testAddPoint() {
        TrigPoint point = new TrigPoint(45.0, 90.0, 0.0, false);
        huntDisplay.addPoint(point);
        assertEquals(1, huntDisplay.points.size());
        TrigPoint addedPoint = (TrigPoint) huntDisplay.points.get(0);
        assertEquals(0.5, addedPoint.getX(), 0.001);
        assertEquals(0.5, addedPoint.getY(), 0.001);
    }

    @Test
    public void testAddLandMark() {
        Icon icon = new ImageIcon();
        Landmark landmark = new Landmark(45.0, 90.0, icon);
        huntDisplay.addLandMark(landmark);
        assertEquals(1, huntDisplay.landmarks.size());
        Landmark addedLandmark = (Landmark) huntDisplay.landmarks.get(0);
        assertEquals(0.5, addedLandmark.getLon(), 0.001);
        assertEquals(0.5, addedLandmark.getLat(), 0.001);
        assertEquals(icon, addedLandmark.getIcon());
    }

    @Test
    public void testPaintComponent() {
        // Create a mock Graphics object
        Graphics g = new BufferedImage(200, 200, BufferedImage.TYPE_INT_ARGB).getGraphics();
        
        // Add a point and a landmark
        TrigPoint point = new TrigPoint(45.0, 90.0, 0.0, false);
        huntDisplay.addPoint(point);
        Icon icon = new ImageIcon();
        Landmark landmark = new Landmark(45.0, 90.0, icon);
        huntDisplay.addLandMark(landmark);
        
        // Call paintComponent
        huntDisplay.paintComponent(g);
        
        // Since we cannot directly test the graphics output, we ensure no exceptions are thrown
        assertTrue(true);
    }
}
```

### Notes:
- The `testPaintComponent` method uses a `BufferedImage` to create a `Graphics` object for testing purposes. This is a common technique to test painting methods without displaying a GUI.
- The `TrigPoint` and `Landmark` classes are assumed to have the methods `getX()`, `getY()`, `getTheta()`, `isFox()`, `getLat()`, `getLon()`, and `getIcon()` as used in the `HuntDisplay` class.
- The test suite checks the basic functionality of adding points and landmarks and ensures that the `paintComponent` method can be called without exceptions.