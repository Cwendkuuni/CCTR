Certainly! Below is a JUnit 4 test suite designed to comprehensively test the methods in the `Objects` class. This suite includes tests for the `equal`, `hashCode`, `toStringHelper`, and `firstNonNull` methods, as well as the `ToStringHelper` class.

```java
import static org.junit.Assert.*;
import org.junit.Test;
import com.google.common.base.Objects;
import com.google.common.base.Objects.ToStringHelper;

public class ObjectsTest {

    @Test
    public void testEqual() {
        assertTrue(Objects.equal(null, null));
        assertFalse(Objects.equal(null, "test"));
        assertFalse(Objects.equal("test", null));
        assertTrue(Objects.equal("test", "test"));
        assertFalse(Objects.equal("test", "different"));
    }

    @Test
    public void testHashCode() {
        assertEquals(0, Objects.hashCode((Object[]) null));
        assertEquals(0, Objects.hashCode());
        assertEquals("test".hashCode(), Objects.hashCode("test"));
        assertEquals(Arrays.hashCode(new Object[]{"test", 123}), Objects.hashCode("test", 123));
    }

    @Test
    public void testToStringHelper_Object() {
        ToStringHelper helper = Objects.toStringHelper(new String("test"));
        assertNotNull(helper);
        assertEquals("String{}", helper.toString());
    }

    @Test
    public void testToStringHelper_Class() {
        ToStringHelper helper = Objects.toStringHelper(String.class);
        assertNotNull(helper);
        assertEquals("String{}", helper.toString());
    }

    @Test
    public void testToStringHelper_String() {
        ToStringHelper helper = Objects.toStringHelper("CustomClass");
        assertNotNull(helper);
        assertEquals("CustomClass{}", helper.toString());
    }

    @Test
    public void testFirstNonNull() {
        assertEquals("first", Objects.firstNonNull("first", "second"));
        assertEquals("second", Objects.firstNonNull(null, "second"));
        try {
            Objects.firstNonNull(null, null);
            fail("Expected NullPointerException");
        } catch (NullPointerException expected) {
            // Expected exception
        }
    }

    @Test
    public void testToStringHelperAddMethods() {
        ToStringHelper helper = Objects.toStringHelper("TestClass")
                .add("field1", "value1")
                .add("field2", 123)
                .add("field3", true)
                .addValue("valueOnly");

        String result = helper.toString();
        assertTrue(result.contains("field1=value1"));
        assertTrue(result.contains("field2=123"));
        assertTrue(result.contains("field3=true"));
        assertTrue(result.contains("valueOnly"));
    }

    @Test
    public void testToStringHelperOmitNullValues() {
        ToStringHelper helper = Objects.toStringHelper("TestClass")
                .omitNullValues()
                .add("field1", null)
                .add("field2", "value2");

        String result = helper.toString();
        assertFalse(result.contains("field1=null"));
        assertTrue(result.contains("field2=value2"));
    }
}
```

### Explanation:
- **`testEqual`**: Tests various scenarios for the `equal` method, including both null and non-null comparisons.
- **`testHashCode`**: Tests the `hashCode` method with different inputs, including null, empty, and multiple objects.
- **`testToStringHelper_Object`, `testToStringHelper_Class`, `testToStringHelper_String`**: Tests the `toStringHelper` method with different types of inputs.
- **`testFirstNonNull`**: Tests the `firstNonNull` method with different combinations of null and non-null inputs.
- **`testToStringHelperAddMethods`**: Tests the `add` and `addValue` methods of the `ToStringHelper` class.
- **`testToStringHelperOmitNullValues`**: Tests the `omitNullValues` feature of the `ToStringHelper` class.

This test suite aims to cover a wide range of scenarios to ensure the correctness of the `Objects` class methods.