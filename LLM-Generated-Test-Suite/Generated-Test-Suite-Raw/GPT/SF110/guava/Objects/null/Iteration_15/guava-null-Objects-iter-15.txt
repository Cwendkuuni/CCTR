Certainly! Below is a JUnit 4 test suite designed to comprehensively test the methods in the `Objects` class. This suite includes tests for the `equal`, `hashCode`, `toStringHelper`, and `firstNonNull` methods, as well as the `ToStringHelper` class methods.

```java
import static org.junit.Assert.*;
import org.junit.Test;
import com.google.common.base.Objects;
import com.google.common.base.Objects.ToStringHelper;

public class ObjectsTest {

    @Test
    public void testEqual() {
        assertTrue(Objects.equal(null, null));
        assertFalse(Objects.equal(null, "test"));
        assertFalse(Objects.equal("test", null));
        assertTrue(Objects.equal("test", "test"));
        assertFalse(Objects.equal("test", "different"));
    }

    @Test
    public void testHashCode() {
        assertEquals(0, Objects.hashCode());
        assertEquals(Arrays.hashCode(new Object[]{null, "test", 123}), Objects.hashCode(null, "test", 123));
    }

    @Test
    public void testToStringHelperWithObject() {
        ToStringHelper helper = Objects.toStringHelper(new Object());
        assertNotNull(helper);
        assertTrue(helper.toString().startsWith("Object{"));
    }

    @Test
    public void testToStringHelperWithClass() {
        ToStringHelper helper = Objects.toStringHelper(Objects.class);
        assertNotNull(helper);
        assertTrue(helper.toString().startsWith("Objects{"));
    }

    @Test
    public void testToStringHelperWithString() {
        ToStringHelper helper = Objects.toStringHelper("CustomClass");
        assertNotNull(helper);
        assertTrue(helper.toString().startsWith("CustomClass{"));
    }

    @Test
    public void testFirstNonNull() {
        assertEquals("first", Objects.firstNonNull("first", "second"));
        assertEquals("second", Objects.firstNonNull(null, "second"));
    }

    @Test(expected = NullPointerException.class)
    public void testFirstNonNullThrowsException() {
        Objects.firstNonNull(null, null);
    }

    @Test
    public void testToStringHelperAddMethods() {
        ToStringHelper helper = Objects.toStringHelper("TestClass")
            .add("int", 1)
            .add("boolean", true)
            .add("char", 'c')
            .add("double", 1.0)
            .add("float", 1.0f)
            .add("long", 1L)
            .add("object", "value")
            .addValue("valueOnly");

        String result = helper.toString();
        assertTrue(result.contains("int=1"));
        assertTrue(result.contains("boolean=true"));
        assertTrue(result.contains("char=c"));
        assertTrue(result.contains("double=1.0"));
        assertTrue(result.contains("float=1.0"));
        assertTrue(result.contains("long=1"));
        assertTrue(result.contains("object=value"));
        assertTrue(result.contains("valueOnly"));
    }

    @Test
    public void testToStringHelperOmitNullValues() {
        ToStringHelper helper = Objects.toStringHelper("TestClass")
            .omitNullValues()
            .add("notNull", "value")
            .add("isNull", null);

        String result = helper.toString();
        assertTrue(result.contains("notNull=value"));
        assertFalse(result.contains("isNull"));
    }
}
```

This test suite covers the following:

- `equal`: Tests for various combinations of null and non-null objects.
- `hashCode`: Tests with no arguments and with a mix of null and non-null objects.
- `toStringHelper`: Tests for creating `ToStringHelper` with an object, class, and string.
- `firstNonNull`: Tests for returning the first non-null value and handling null inputs.
- `ToStringHelper` methods: Tests for adding various types of values and omitting null values.

Make sure to have the necessary dependencies and imports for JUnit 4 and any other required libraries in your project setup.