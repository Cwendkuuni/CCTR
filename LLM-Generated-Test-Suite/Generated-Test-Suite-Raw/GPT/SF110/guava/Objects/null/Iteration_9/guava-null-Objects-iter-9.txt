Certainly! Below is a JUnit 4 test suite designed to comprehensively test the methods in the `Objects` class. This test suite covers the `equal`, `hashCode`, `toStringHelper`, and `firstNonNull` methods, as well as the `ToStringHelper` class and its methods.

```java
import static org.junit.Assert.*;
import org.junit.Test;
import com.google.common.base.Objects;
import com.google.common.base.Objects.ToStringHelper;

public class ObjectsTest {

    @Test
    public void testEqual() {
        assertTrue(Objects.equal(null, null));
        assertFalse(Objects.equal(null, "test"));
        assertFalse(Objects.equal("test", null));
        assertTrue(Objects.equal("test", "test"));
        assertFalse(Objects.equal("test", "different"));
    }

    @Test
    public void testHashCode() {
        assertEquals(0, Objects.hashCode());
        assertEquals(Arrays.hashCode(new Object[]{null, "test", 123}), Objects.hashCode(null, "test", 123));
    }

    @Test
    public void testToStringHelper_Object() {
        Object obj = new Object();
        ToStringHelper helper = Objects.toStringHelper(obj);
        assertNotNull(helper);
        assertTrue(helper.toString().startsWith(obj.getClass().getSimpleName() + "{"));
    }

    @Test
    public void testToStringHelper_Class() {
        ToStringHelper helper = Objects.toStringHelper(Objects.class);
        assertNotNull(helper);
        assertTrue(helper.toString().startsWith(Objects.class.getSimpleName() + "{"));
    }

    @Test
    public void testToStringHelper_String() {
        ToStringHelper helper = Objects.toStringHelper("TestClassName");
        assertNotNull(helper);
        assertTrue(helper.toString().startsWith("TestClassName{"));
    }

    @Test
    public void testFirstNonNull() {
        assertEquals("first", Objects.firstNonNull("first", "second"));
        assertEquals("second", Objects.firstNonNull(null, "second"));
        try {
            Objects.firstNonNull(null, null);
            fail("Expected NullPointerException");
        } catch (NullPointerException expected) {
            // Expected exception
        }
    }

    @Test
    public void testToStringHelperAddMethods() {
        ToStringHelper helper = Objects.toStringHelper("Test")
                .add("int", 1)
                .add("boolean", true)
                .add("char", 'c')
                .add("double", 1.0)
                .add("float", 1.0f)
                .add("long", 1L)
                .add("object", "value")
                .omitNullValues();

        String result = helper.toString();
        assertTrue(result.contains("int=1"));
        assertTrue(result.contains("boolean=true"));
        assertTrue(result.contains("char=c"));
        assertTrue(result.contains("double=1.0"));
        assertTrue(result.contains("float=1.0"));
        assertTrue(result.contains("long=1"));
        assertTrue(result.contains("object=value"));
    }

    @Test
    public void testToStringHelperOmitNullValues() {
        ToStringHelper helper = Objects.toStringHelper("Test")
                .add("notNull", "value")
                .add("isNull", null)
                .omitNullValues();

        String result = helper.toString();
        assertTrue(result.contains("notNull=value"));
        assertFalse(result.contains("isNull"));
    }
}
```

This test suite includes:

- Tests for the `equal` method with various combinations of null and non-null objects.
- Tests for the `hashCode` method with different object arrays.
- Tests for the `toStringHelper` method with an object, class, and string.
- Tests for the `firstNonNull` method with different scenarios, including expected exceptions.
- Tests for the `ToStringHelper` class, including adding various types and omitting null values.