Certainly! Below is a JUnit 4 test suite that comprehensively tests the methods in the `Objects` class. This test suite covers the `equal`, `hashCode`, `toStringHelper`, and `firstNonNull` methods, as well as the `ToStringHelper` class and its methods.

```java
import static org.junit.Assert.*;
import org.junit.Test;
import com.google.common.base.Objects;
import com.google.common.base.Objects.ToStringHelper;

public class ObjectsTest {

    @Test
    public void testEqual() {
        assertTrue(Objects.equal(null, null));
        assertFalse(Objects.equal(null, "test"));
        assertFalse(Objects.equal("test", null));
        assertTrue(Objects.equal("test", "test"));
        assertFalse(Objects.equal("test", "different"));
    }

    @Test
    public void testHashCode() {
        assertEquals(0, Objects.hashCode());
        assertEquals(Arrays.hashCode(new Object[]{null, "test", 123}), Objects.hashCode(null, "test", 123));
    }

    @Test
    public void testToStringHelperWithObject() {
        Object obj = new Object();
        ToStringHelper helper = Objects.toStringHelper(obj);
        assertNotNull(helper);
        assertTrue(helper.toString().startsWith(obj.getClass().getSimpleName() + "{"));
    }

    @Test
    public void testToStringHelperWithClass() {
        ToStringHelper helper = Objects.toStringHelper(Objects.class);
        assertNotNull(helper);
        assertTrue(helper.toString().startsWith(Objects.class.getSimpleName() + "{"));
    }

    @Test
    public void testToStringHelperWithString() {
        ToStringHelper helper = Objects.toStringHelper("TestClassName");
        assertNotNull(helper);
        assertTrue(helper.toString().startsWith("TestClassName{"));
    }

    @Test
    public void testFirstNonNull() {
        assertEquals("first", Objects.firstNonNull("first", "second"));
        assertEquals("second", Objects.firstNonNull(null, "second"));
    }

    @Test(expected = NullPointerException.class)
    public void testFirstNonNullThrowsException() {
        Objects.firstNonNull(null, null);
    }

    @Test
    public void testToStringHelperAddMethods() {
        ToStringHelper helper = Objects.toStringHelper("Test")
            .add("int", 1)
            .add("boolean", true)
            .add("char", 'c')
            .add("double", 1.0)
            .add("float", 1.0f)
            .add("long", 1L)
            .add("object", new Object())
            .omitNullValues();

        String result = helper.toString();
        assertTrue(result.contains("int=1"));
        assertTrue(result.contains("boolean=true"));
        assertTrue(result.contains("char=c"));
        assertTrue(result.contains("double=1.0"));
        assertTrue(result.contains("float=1.0"));
        assertTrue(result.contains("long=1"));
        assertTrue(result.contains("object="));
    }

    @Test
    public void testToStringHelperOmitNullValues() {
        ToStringHelper helper = Objects.toStringHelper("Test")
            .add("notNull", "value")
            .add("isNull", null)
            .omitNullValues();

        String result = helper.toString();
        assertTrue(result.contains("notNull=value"));
        assertFalse(result.contains("isNull"));
    }
}
```

### Explanation:
- **`testEqual`**: Tests the `equal` method with various combinations of null and non-null values.
- **`testHashCode`**: Tests the `hashCode` method with different object arrays.
- **`testToStringHelperWithObject`, `testToStringHelperWithClass`, `testToStringHelperWithString`**: Test the `toStringHelper` method with different types of inputs.
- **`testFirstNonNull`**: Tests the `firstNonNull` method with non-null and null values.
- **`testFirstNonNullThrowsException`**: Ensures `firstNonNull` throws a `NullPointerException` when both arguments are null.
- **`testToStringHelperAddMethods`**: Tests the `add` methods of `ToStringHelper` with various data types.
- **`testToStringHelperOmitNullValues`**: Tests the `omitNullValues` functionality of `ToStringHelper`.

This suite should provide comprehensive coverage for the `Objects` class and its nested `ToStringHelper` class.