```java
import static org.junit.Assert.*;
import org.jdom2.*;
import org.jdom2.transform.JDOMResult;
import org.jdom2.input.sax.DefaultJDOMFactory;
import org.junit.Before;
import org.junit.Test;
import java.util.*;

public class JDOMResultTest {

    private JDOMResult jdomResult;

    @Before
    public void setUp() {
        jdomResult = new JDOMResult();
    }

    @Test
    public void testSetAndGetResult() {
        List<Content> contentList = new ArrayList<>();
        contentList.add(new Element("testElement"));
        jdomResult.setResult(contentList);

        List<Content> result = jdomResult.getResult();
        assertNotNull(result);
        assertEquals(1, result.size());
        assertEquals("testElement", ((Element) result.get(0)).getName());
    }

    @Test
    public void testSetAndGetDocument() {
        Document doc = new Document();
        Element root = new Element("root");
        doc.setRootElement(root);
        jdomResult.setDocument(doc);

        Document resultDoc = jdomResult.getDocument();
        assertNotNull(resultDoc);
        assertEquals("root", resultDoc.getRootElement().getName());
    }

    @Test
    public void testSetAndGetFactory() {
        JDOMFactory factory = new DefaultJDOMFactory();
        jdomResult.setFactory(factory);

        JDOMFactory resultFactory = jdomResult.getFactory();
        assertNotNull(resultFactory);
        assertEquals(factory, resultFactory);
    }

    @Test
    public void testGetResultWithNullDocument() {
        jdomResult.setDocument(null);
        List<Content> result = jdomResult.getResult();
        assertNotNull(result);
        assertTrue(result.isEmpty());
    }

    @Test
    public void testGetDocumentWithNullResultList() {
        jdomResult.setResult(null);
        Document resultDoc = jdomResult.getDocument();
        assertNull(resultDoc);
    }

    @Test
    public void testRetrieveResultWithEmptyState() {
        jdomResult.setResult(null);
        jdomResult.setDocument(null);
        List<Content> result = jdomResult.getResult();
        assertNotNull(result);
        assertTrue(result.isEmpty());
    }

    @Test
    public void testSetHandlerDoesNotThrow() {
        try {
            jdomResult.setHandler(null);
        } catch (Exception e) {
            fail("setHandler should not throw an exception");
        }
    }

    @Test
    public void testSetLexicalHandlerDoesNotThrow() {
        try {
            jdomResult.setLexicalHandler(null);
        } catch (Exception e) {
            fail("setLexicalHandler should not throw an exception");
        }
    }
}
```

This test suite covers the main functionalities of the `JDOMResult` class, including setting and getting results, documents, and factories, as well as ensuring that certain methods do not throw exceptions. The tests are designed to verify the expected behavior of the class methods.