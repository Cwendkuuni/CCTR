Certainly! Below is a comprehensive JUnit 4 test suite for the `ArgsParser` class. This test suite covers all the methods in the class, including edge cases and expected exceptions.

```java
import de.devcity.parseargs.ArgsParser;
import de.devcity.parseargs.arguments.SwitchArgument;
import de.devcity.parseargs.arguments.ParameterArgument;
import de.devcity.parseargs.arguments.StringArgument;
import org.junit.Before;
import org.junit.Test;

import java.util.List;

import static org.junit.Assert.*;

public class ArgsParserTest {

    private ArgsParser argsParser;

    @Before
    public void setUp() {
        argsParser = new ArgsParser();
    }

    @Test
    public void testConstructorWithArgs() {
        String[] args = {"--key", "value", "-a", "b"};
        ArgsParser parser = new ArgsParser(args);
        assertArrayEquals(args, parser.getArgs());
    }

    @Test
    public void testGetArgsCount() {
        String[] args = {"--key", "value", "-a", "b"};
        argsParser.setArgs(args);
        assertEquals(4, argsParser.getArgsCount());
    }

    @Test
    public void testGetArgs() {
        String[] args = {"--key", "value", "-a", "b"};
        argsParser.setArgs(args);
        assertArrayEquals(args, argsParser.getArgs());
    }

    @Test(expected = NullPointerException.class)
    public void testSetArgsWithNull() {
        argsParser.setArgs(null);
    }

    @Test
    public void testSetArgs() {
        String[] args = {"--key", "value", "-a", "b"};
        argsParser.setArgs(args);
        assertArrayEquals(args, argsParser.getArgs());
    }

    @Test
    public void testGetArgsLeftCount() {
        String[] args = {"--key", "value", "-a", "b"};
        argsParser.setArgs(args);
        assertEquals(4, argsParser.getArgsLeftCount());
    }

    @Test
    public void testParseSwitchArgumentLongKey() {
        String[] args = {"--key", "-a"};
        argsParser.setArgs(args);
        SwitchArgument result = argsParser.parseSwitchArgument("key");
        assertTrue(result.isPresent());
        assertEquals("key", result.getKey());
        assertEquals(0, result.getIndex());
    }

    @Test
    public void testParseSwitchArgumentShortKey() {
        String[] args = {"--key", "-abc"};
        argsParser.setArgs(args);
        SwitchArgument result = argsParser.parseSwitchArgument("b");
        assertTrue(result.isPresent());
        assertEquals("b", result.getKey());
        assertEquals(1, result.getIndex());
    }

    @Test
    public void testParseSwitchArgumentNotFound() {
        String[] args = {"--key", "-a"};
        argsParser.setArgs(args);
        SwitchArgument result = argsParser.parseSwitchArgument("z");
        assertFalse(result.isPresent());
        assertEquals("z", result.getKey());
        assertEquals(-1, result.getIndex());
    }

    @Test
    public void testParseParameterArgumentLongKey() {
        String[] args = {"--key", "value", "-a"};
        argsParser.setArgs(args);
        ParameterArgument result = argsParser.parseParameterArgument("key");
        assertNotNull(result);
        assertEquals("key", result.getKey());
        assertEquals("value", result.getValue());
        assertEquals(0, result.getIndex());
    }

    @Test
    public void testParseParameterArgumentShortKey() {
        String[] args = {"-kvalue", "-a"};
        argsParser.setArgs(args);
        ParameterArgument result = argsParser.parseParameterArgument("k");
        assertNotNull(result);
        assertEquals("k", result.getKey());
        assertEquals("value", result.getValue());
        assertEquals(0, result.getIndex());
    }

    @Test
    public void testParseParameterArgumentNotFound() {
        String[] args = {"--key", "value", "-a"};
        argsParser.setArgs(args);
        ParameterArgument result = argsParser.parseParameterArgument("z");
        assertNull(result);
    }

    @Test
    public void testParseStringArgument() {
        String[] args = {"--key", "value", "-a", "b"};
        argsParser.setArgs(args);
        List<StringArgument> result = argsParser.parseStringArgument();
        assertEquals(4, result.size());
        assertEquals("--key", result.get(0).getValue());
        assertEquals("value", result.get(1).getValue());
        assertEquals("-a", result.get(2).getValue());
        assertEquals("b", result.get(3).getValue());
    }
}
```

This test suite includes tests for each method in the `ArgsParser` class, ensuring that the class behaves as expected under various conditions. It also checks for exceptions where applicable.