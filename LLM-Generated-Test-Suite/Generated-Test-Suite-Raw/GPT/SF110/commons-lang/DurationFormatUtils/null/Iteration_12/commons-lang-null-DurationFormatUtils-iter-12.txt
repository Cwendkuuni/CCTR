Certainly! Below is a JUnit 4 test suite for the `DurationFormatUtils` class. This test suite aims to cover various scenarios for each method in the class.

```java
import org.apache.commons.lang3.time.DurationFormatUtils;
import org.junit.Test;
import static org.junit.Assert.*;

public class DurationFormatUtilsTest {

    @Test
    public void testFormatDurationHMS() {
        assertEquals("0:00:00.000", DurationFormatUtils.formatDurationHMS(0));
        assertEquals("0:00:01.000", DurationFormatUtils.formatDurationHMS(1000));
        assertEquals("0:01:00.000", DurationFormatUtils.formatDurationHMS(60000));
        assertEquals("1:00:00.000", DurationFormatUtils.formatDurationHMS(3600000));
    }

    @Test
    public void testFormatDurationISO() {
        assertEquals("P0Y0M0DT0H0M0.000S", DurationFormatUtils.formatDurationISO(0));
        assertEquals("P0Y0M0DT0H0M1.000S", DurationFormatUtils.formatDurationISO(1000));
        assertEquals("P0Y0M0DT0H1M0.000S", DurationFormatUtils.formatDurationISO(60000));
        assertEquals("P0Y0M0DT1H0M0.000S", DurationFormatUtils.formatDurationISO(3600000));
    }

    @Test
    public void testFormatDuration() {
        assertEquals("0:00:00.000", DurationFormatUtils.formatDuration(0, "H:mm:ss.SSS"));
        assertEquals("0:00:01.000", DurationFormatUtils.formatDuration(1000, "H:mm:ss.SSS"));
        assertEquals("0:01:00.000", DurationFormatUtils.formatDuration(60000, "H:mm:ss.SSS"));
        assertEquals("1:00:00.000", DurationFormatUtils.formatDuration(3600000, "H:mm:ss.SSS"));
    }

    @Test
    public void testFormatDurationWithPadding() {
        assertEquals("00:00:00.000", DurationFormatUtils.formatDuration(0, "HH:mm:ss.SSS", true));
        assertEquals("00:00:01.000", DurationFormatUtils.formatDuration(1000, "HH:mm:ss.SSS", true));
        assertEquals("00:01:00.000", DurationFormatUtils.formatDuration(60000, "HH:mm:ss.SSS", true));
        assertEquals("01:00:00.000", DurationFormatUtils.formatDuration(3600000, "HH:mm:ss.SSS", true));
    }

    @Test
    public void testFormatDurationWords() {
        assertEquals("0 days 0 hours 0 minutes 0 seconds", DurationFormatUtils.formatDurationWords(0, false, false));
        assertEquals("1 second", DurationFormatUtils.formatDurationWords(1000, true, true));
        assertEquals("1 minute", DurationFormatUtils.formatDurationWords(60000, true, true));
        assertEquals("1 hour", DurationFormatUtils.formatDurationWords(3600000, true, true));
    }

    @Test
    public void testFormatPeriodISO() {
        long startMillis = 0;
        long endMillis = 3600000;
        assertEquals("P0Y0M0DT1H0M0.000S", DurationFormatUtils.formatPeriodISO(startMillis, endMillis));
    }

    @Test
    public void testFormatPeriod() {
        long startMillis = 0;
        long endMillis = 3600000;
        assertEquals("1:00:00.000", DurationFormatUtils.formatPeriod(startMillis, endMillis, "H:mm:ss.SSS"));
    }

    @Test
    public void testFormatPeriodWithPadding() {
        long startMillis = 0;
        long endMillis = 3600000;
        assertEquals("01:00:00.000", DurationFormatUtils.formatPeriod(startMillis, endMillis, "HH:mm:ss.SSS", true, TimeZone.getDefault()));
    }
}
```

This test suite covers the following methods:
- `formatDurationHMS`
- `formatDurationISO`
- `formatDuration`
- `formatDurationWords`
- `formatPeriodISO`
- `formatPeriod`

Each test method checks various scenarios, including edge cases like zero duration and typical cases like one second, one minute, and one hour. Adjust the test cases as needed to fit specific requirements or additional edge cases.