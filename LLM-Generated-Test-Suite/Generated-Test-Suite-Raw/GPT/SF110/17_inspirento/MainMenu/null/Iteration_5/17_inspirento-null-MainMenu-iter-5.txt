```java
import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.MockitoJUnitRunner;

import javax.swing.*;
import java.util.MissingResourceException;

@RunWith(MockitoJUnitRunner.class)
public class MainMenuTest {

    @Mock
    private InspirentoMediator mockMediator;

    @Before
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testMainMenuConstructor() {
        try {
            MainMenu mainMenu = new MainMenu(mockMediator);
            assertNotNull(mainMenu);
            assertEquals(mockMediator, mainMenu.mediator);
        } catch (MissingResourceException e) {
            fail("MissingResourceException should not be thrown");
        }
    }

    @Test
    public void testCreateMenu() {
        MainMenu mainMenu = new MainMenu(mockMediator);
        try {
            JMenu menu = mainMenu.createMenu("file");
            assertNotNull(menu);
            assertEquals("File", menu.getText());
        } catch (MissingResourceException e) {
            fail("MissingResourceException should not be thrown");
        }
    }

    @Test
    public void testAddShortcutAndIcon() {
        MainMenu mainMenu = new MainMenu(mockMediator);
        JMenuItem menuItem = new JMenuItem("Test Item");

        try {
            mainMenu.addShortcutAndIcon(menuItem, "testItem");
            assertNotNull(menuItem.getAccelerator());
            assertNotNull(menuItem.getIcon());
        } catch (MissingResourceException e) {
            fail("MissingResourceException should not be thrown");
        }
    }

    @Test
    public void testChanged() {
        MainMenu mainMenu = new MainMenu(mockMediator);
        mainMenu.changed();
        // Since the changed method is empty, we just ensure no exceptions are thrown
    }
}
```

This test suite uses JUnit 4 and Mockito to test the `MainMenu` class. It includes tests for the constructor, `createMenu`, `addShortcutAndIcon`, and `changed` methods. The tests ensure that the methods behave as expected and handle exceptions appropriately.