```java
import static org.junit.Assert.*;
import org.junit.Test;
import org.apache.commons.compress.archivers.tar.TarUtils;

public class TarUtilsTest {

    @Test
    public void testParseOctalValid() {
        byte[] buffer = {' ', '0', '7', '7', '7', ' ', ' '};
        long result = TarUtils.parseOctal(buffer, 0, buffer.length);
        assertEquals(511L, result);
    }

    @Test(expected = IllegalArgumentException.class)
    public void testParseOctalInvalidCharacter() {
        byte[] buffer = {' ', '0', '8', '7', '7', ' ', ' '};
        TarUtils.parseOctal(buffer, 0, buffer.length);
    }

    @Test
    public void testParseOctalAllNULs() {
        byte[] buffer = {0, 0, 0, 0, 0, 0, 0};
        long result = TarUtils.parseOctal(buffer, 0, buffer.length);
        assertEquals(0L, result);
    }

    @Test
    public void testParseName() {
        byte[] buffer = {'t', 'e', 's', 't', 0, 'i', 'g', 'n', 'o', 'r', 'e'};
        String result = TarUtils.parseName(buffer, 0, buffer.length);
        assertEquals("test", result);
    }

    @Test
    public void testFormatNameBytes() {
        String name = "test";
        byte[] buffer = new byte[10];
        int offset = TarUtils.formatNameBytes(name, buffer, 0, buffer.length);
        assertEquals(10, offset);
        assertEquals('t', buffer[0]);
        assertEquals('e', buffer[1]);
        assertEquals('s', buffer[2]);
        assertEquals('t', buffer[3]);
        assertEquals(0, buffer[4]); // NUL padding
    }

    @Test
    public void testFormatUnsignedOctalString() {
        byte[] buffer = new byte[5];
        TarUtils.formatUnsignedOctalString(511, buffer, 0, buffer.length);
        assertEquals('0', buffer[0]);
        assertEquals('7', buffer[1]);
        assertEquals('7', buffer[2]);
        assertEquals('7', buffer[3]);
        assertEquals('7', buffer[4]);
    }

    @Test(expected = IllegalArgumentException.class)
    public void testFormatUnsignedOctalStringOverflow() {
        byte[] buffer = new byte[3];
        TarUtils.formatUnsignedOctalString(511, buffer, 0, buffer.length);
    }

    @Test
    public void testFormatOctalBytes() {
        byte[] buffer = new byte[7];
        int offset = TarUtils.formatOctalBytes(511, buffer, 0, buffer.length);
        assertEquals(7, offset);
        assertEquals('0', buffer[0]);
        assertEquals('7', buffer[1]);
        assertEquals('7', buffer[2]);
        assertEquals('7', buffer[3]);
        assertEquals('7', buffer[4]);
        assertEquals(' ', buffer[5]);
        assertEquals(0, buffer[6]);
    }

    @Test
    public void testFormatLongOctalBytes() {
        byte[] buffer = new byte[6];
        int offset = TarUtils.formatLongOctalBytes(511, buffer, 0, buffer.length);
        assertEquals(6, offset);
        assertEquals('0', buffer[0]);
        assertEquals('7', buffer[1]);
        assertEquals('7', buffer[2]);
        assertEquals('7', buffer[3]);
        assertEquals('7', buffer[4]);
        assertEquals(' ', buffer[5]);
    }

    @Test
    public void testFormatCheckSumOctalBytes() {
        byte[] buffer = new byte[8];
        int offset = TarUtils.formatCheckSumOctalBytes(511, buffer, 0, buffer.length);
        assertEquals(8, offset);
        assertEquals('0', buffer[0]);
        assertEquals('7', buffer[1]);
        assertEquals('7', buffer[2]);
        assertEquals('7', buffer[3]);
        assertEquals('7', buffer[4]);
        assertEquals(0, buffer[5]);
        assertEquals(' ', buffer[6]);
    }

    @Test
    public void testComputeCheckSum() {
        byte[] buffer = {1, 2, 3, 4, 5};
        long checksum = TarUtils.computeCheckSum(buffer);
        assertEquals(15L, checksum);
    }
}
```