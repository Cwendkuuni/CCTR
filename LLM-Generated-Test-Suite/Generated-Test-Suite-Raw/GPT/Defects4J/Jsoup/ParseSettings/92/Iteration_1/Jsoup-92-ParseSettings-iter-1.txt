```java
import org.jsoup.nodes.Attributes;
import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

public class ParseSettingsTest {

    private ParseSettings htmlDefault;
    private ParseSettings preserveCase;

    @Before
    public void setUp() {
        htmlDefault = ParseSettings.htmlDefault;
        preserveCase = ParseSettings.preserveCase;
    }

    @Test
    public void testHtmlDefaultPreserveTagCase() {
        assertFalse(htmlDefault.preserveTagCase());
    }

    @Test
    public void testHtmlDefaultPreserveAttributeCase() {
        assertFalse(htmlDefault.preserveAttributeCase);
    }

    @Test
    public void testPreserveCasePreserveTagCase() {
        assertTrue(preserveCase.preserveTagCase());
    }

    @Test
    public void testPreserveCasePreserveAttributeCase() {
        assertTrue(preserveCase.preserveAttributeCase);
    }

    @Test
    public void testNormalizeTagWithHtmlDefault() {
        assertEquals("div", htmlDefault.normalizeTag("DIV"));
        assertEquals("div", htmlDefault.normalizeTag("div"));
        assertEquals("div", htmlDefault.normalizeTag(" Div "));
    }

    @Test
    public void testNormalizeTagWithPreserveCase() {
        assertEquals("DIV", preserveCase.normalizeTag("DIV"));
        assertEquals("div", preserveCase.normalizeTag("div"));
        assertEquals(" Div ", preserveCase.normalizeTag(" Div "));
    }

    @Test
    public void testNormalizeAttributeWithHtmlDefault() {
        assertEquals("class", htmlDefault.normalizeAttribute("CLASS"));
        assertEquals("class", htmlDefault.normalizeAttribute("class"));
        assertEquals("class", htmlDefault.normalizeAttribute(" Class "));
    }

    @Test
    public void testNormalizeAttributeWithPreserveCase() {
        assertEquals("CLASS", preserveCase.normalizeAttribute("CLASS"));
        assertEquals("class", preserveCase.normalizeAttribute("class"));
        assertEquals(" Class ", preserveCase.normalizeAttribute(" Class "));
    }

    @Test
    public void testNormalizeAttributesWithHtmlDefault() {
        Attributes mockAttributes = mock(Attributes.class);
        htmlDefault.normalizeAttributes(mockAttributes);
        verify(mockAttributes, times(1)).normalize();
    }

    @Test
    public void testNormalizeAttributesWithPreserveCase() {
        Attributes mockAttributes = mock(Attributes.class);
        preserveCase.normalizeAttributes(mockAttributes);
        verify(mockAttributes, never()).normalize();
    }
}
```