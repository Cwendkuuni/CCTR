```java
import org.jsoup.nodes.Attributes;
import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.*;

public class ParseSettingsTest {

    private ParseSettings htmlDefault;
    private ParseSettings preserveCase;

    @Before
    public void setUp() {
        htmlDefault = ParseSettings.htmlDefault;
        preserveCase = ParseSettings.preserveCase;
    }

    @Test
    public void testHtmlDefaultPreserveTagCase() {
        assertFalse(htmlDefault.preserveTagCase());
    }

    @Test
    public void testHtmlDefaultPreserveAttributeCase() {
        assertFalse(htmlDefault.preserveAttributeCase);
    }

    @Test
    public void testPreserveCasePreserveTagCase() {
        assertTrue(preserveCase.preserveTagCase());
    }

    @Test
    public void testPreserveCasePreserveAttributeCase() {
        assertTrue(preserveCase.preserveAttributeCase);
    }

    @Test
    public void testNormalizeTagWithHtmlDefault() {
        assertEquals("div", htmlDefault.normalizeTag("DIV"));
        assertEquals("div", htmlDefault.normalizeTag("div"));
        assertEquals("div", htmlDefault.normalizeTag(" Div "));
    }

    @Test
    public void testNormalizeTagWithPreserveCase() {
        assertEquals("DIV", preserveCase.normalizeTag("DIV"));
        assertEquals("div", preserveCase.normalizeTag("div"));
        assertEquals(" Div ", preserveCase.normalizeTag(" Div "));
    }

    @Test
    public void testNormalizeAttributeWithHtmlDefault() {
        assertEquals("href", htmlDefault.normalizeAttribute("HREF"));
        assertEquals("href", htmlDefault.normalizeAttribute("href"));
        assertEquals("href", htmlDefault.normalizeAttribute(" Href "));
    }

    @Test
    public void testNormalizeAttributeWithPreserveCase() {
        assertEquals("HREF", preserveCase.normalizeAttribute("HREF"));
        assertEquals("href", preserveCase.normalizeAttribute("href"));
        assertEquals(" Href ", preserveCase.normalizeAttribute(" Href "));
    }

    @Test
    public void testNormalizeAttributesWithHtmlDefault() {
        Attributes attributes = new Attributes();
        attributes.put("HREF", "value");
        attributes.put("SRC", "value");
        htmlDefault.normalizeAttributes(attributes);
        assertTrue(attributes.hasKey("href"));
        assertTrue(attributes.hasKey("src"));
        assertFalse(attributes.hasKey("HREF"));
        assertFalse(attributes.hasKey("SRC"));
    }

    @Test
    public void testNormalizeAttributesWithPreserveCase() {
        Attributes attributes = new Attributes();
        attributes.put("HREF", "value");
        attributes.put("SRC", "value");
        preserveCase.normalizeAttributes(attributes);
        assertTrue(attributes.hasKey("HREF"));
        assertTrue(attributes.hasKey("SRC"));
    }
}
```
This test suite covers all the methods in the `ParseSettings` class, ensuring that both the `htmlDefault` and `preserveCase` settings are tested for tag and attribute normalization.