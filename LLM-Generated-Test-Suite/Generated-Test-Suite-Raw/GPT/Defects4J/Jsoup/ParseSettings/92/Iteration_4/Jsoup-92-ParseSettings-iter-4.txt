```java
import org.jsoup.nodes.Attributes;
import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

public class ParseSettingsTest {

    private ParseSettings htmlDefault;
    private ParseSettings preserveCase;

    @Before
    public void setUp() {
        htmlDefault = ParseSettings.htmlDefault;
        preserveCase = ParseSettings.preserveCase;
    }

    @Test
    public void testHtmlDefaultPreserveTagCase() {
        assertFalse(htmlDefault.preserveTagCase());
    }

    @Test
    public void testHtmlDefaultPreserveAttributeCase() {
        assertFalse(htmlDefault.preserveAttributeCase);
    }

    @Test
    public void testPreserveCasePreserveTagCase() {
        assertTrue(preserveCase.preserveTagCase());
    }

    @Test
    public void testPreserveCasePreserveAttributeCase() {
        assertTrue(preserveCase.preserveAttributeCase);
    }

    @Test
    public void testNormalizeTagHtmlDefault() {
        assertEquals("div", htmlDefault.normalizeTag("DIV"));
        assertEquals("div", htmlDefault.normalizeTag("div"));
        assertEquals("div", htmlDefault.normalizeTag(" Div "));
    }

    @Test
    public void testNormalizeTagPreserveCase() {
        assertEquals("DIV", preserveCase.normalizeTag("DIV"));
        assertEquals("div", preserveCase.normalizeTag("div"));
        assertEquals(" Div ", preserveCase.normalizeTag(" Div "));
    }

    @Test
    public void testNormalizeAttributeHtmlDefault() {
        assertEquals("href", htmlDefault.normalizeAttribute("HREF"));
        assertEquals("href", htmlDefault.normalizeAttribute("href"));
        assertEquals("href", htmlDefault.normalizeAttribute(" Href "));
    }

    @Test
    public void testNormalizeAttributePreserveCase() {
        assertEquals("HREF", preserveCase.normalizeAttribute("HREF"));
        assertEquals("href", preserveCase.normalizeAttribute("href"));
        assertEquals(" Href ", preserveCase.normalizeAttribute(" Href "));
    }

    @Test
    public void testNormalizeAttributesHtmlDefault() {
        Attributes attributes = mock(Attributes.class);
        htmlDefault.normalizeAttributes(attributes);
        verify(attributes, times(1)).normalize();
    }

    @Test
    public void testNormalizeAttributesPreserveCase() {
        Attributes attributes = mock(Attributes.class);
        preserveCase.normalizeAttributes(attributes);
        verify(attributes, never()).normalize();
    }
}
```