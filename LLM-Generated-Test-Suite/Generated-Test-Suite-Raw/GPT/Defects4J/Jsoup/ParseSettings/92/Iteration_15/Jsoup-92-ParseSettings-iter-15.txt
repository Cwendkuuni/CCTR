```java
import org.jsoup.nodes.Attributes;
import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertFalse;

public class ParseSettingsTest {

    private ParseSettings htmlDefault;
    private ParseSettings preserveCase;

    @Before
    public void setUp() {
        htmlDefault = ParseSettings.htmlDefault;
        preserveCase = ParseSettings.preserveCase;
    }

    @Test
    public void testHtmlDefaultSettings() {
        assertFalse(htmlDefault.preserveTagCase());
        assertFalse(htmlDefault.preserveAttributeCase());
    }

    @Test
    public void testPreserveCaseSettings() {
        assertTrue(preserveCase.preserveTagCase());
        assertTrue(preserveCase.preserveAttributeCase());
    }

    @Test
    public void testNormalizeTagWithHtmlDefault() {
        assertEquals("div", htmlDefault.normalizeTag("DIV"));
        assertEquals("div", htmlDefault.normalizeTag("div"));
        assertEquals("div", htmlDefault.normalizeTag(" Div "));
    }

    @Test
    public void testNormalizeTagWithPreserveCase() {
        assertEquals("DIV", preserveCase.normalizeTag("DIV"));
        assertEquals("div", preserveCase.normalizeTag("div"));
        assertEquals(" Div ", preserveCase.normalizeTag(" Div "));
    }

    @Test
    public void testNormalizeAttributeWithHtmlDefault() {
        assertEquals("class", htmlDefault.normalizeAttribute("CLASS"));
        assertEquals("class", htmlDefault.normalizeAttribute("class"));
        assertEquals("class", htmlDefault.normalizeAttribute(" Class "));
    }

    @Test
    public void testNormalizeAttributeWithPreserveCase() {
        assertEquals("CLASS", preserveCase.normalizeAttribute("CLASS"));
        assertEquals("class", preserveCase.normalizeAttribute("class"));
        assertEquals(" Class ", preserveCase.normalizeAttribute(" Class "));
    }

    @Test
    public void testNormalizeAttributesWithHtmlDefault() {
        Attributes attributes = new Attributes();
        attributes.put("CLASS", "value");
        attributes.put("ID", "value");
        htmlDefault.normalizeAttributes(attributes);
        assertTrue(attributes.hasKey("class"));
        assertTrue(attributes.hasKey("id"));
        assertFalse(attributes.hasKey("CLASS"));
        assertFalse(attributes.hasKey("ID"));
    }

    @Test
    public void testNormalizeAttributesWithPreserveCase() {
        Attributes attributes = new Attributes();
        attributes.put("CLASS", "value");
        attributes.put("ID", "value");
        preserveCase.normalizeAttributes(attributes);
        assertTrue(attributes.hasKey("CLASS"));
        assertTrue(attributes.hasKey("ID"));
        assertFalse(attributes.hasKey("class"));
        assertFalse(attributes.hasKey("id"));
    }
}
```